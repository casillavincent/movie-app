[{"/Users/vince/Desktop/GitHub/movie-app/src/index.js":"1","/Users/vince/Desktop/GitHub/movie-app/src/App.js":"2","/Users/vince/Desktop/GitHub/movie-app/src/globals/variables.js":"3","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Header.js":"4","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Landing.js":"5","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Favourites.js":"6","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/About.js":"7","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Footer.js":"8","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/Popular.js":"9","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Sidebar.js":"10","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/PopularMovie.js":"11","/Users/vince/Desktop/GitHub/movie-app/src/globals/utilities.js":"12","/Users/vince/Desktop/GitHub/movie-app/src/globals/shortenPars.js":"13","/Users/vince/Desktop/GitHub/movie-app/src/globals/formatDate.js":"14","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Single.js":"15","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRated.js":"16","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRatedMovie.js":"17","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/Upcoming.js":"18","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/UpcomingMovie.js":"19","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlaying.js":"20","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlayingMovie.js":"21","/Users/vince/Desktop/GitHub/movie-app/src/globals/likes.js":"22","/Users/vince/Desktop/GitHub/movie-app/src/globals/watchlist.js":"23"},{"size":230,"mtime":1610333496618,"results":"24","hashOfConfig":"25"},{"size":1422,"mtime":1610949409264,"results":"26","hashOfConfig":"25"},{"size":210,"mtime":1611076753040,"results":"27","hashOfConfig":"25"},{"size":1868,"mtime":1611041447875,"results":"28","hashOfConfig":"25"},{"size":2303,"mtime":1611089100280,"results":"29","hashOfConfig":"25"},{"size":7143,"mtime":1611117076349,"results":"30","hashOfConfig":"25"},{"size":2243,"mtime":1611043823146,"results":"31","hashOfConfig":"25"},{"size":1457,"mtime":1610343983168,"results":"32","hashOfConfig":"25"},{"size":3358,"mtime":1611094125082,"results":"33","hashOfConfig":"25"},{"size":2681,"mtime":1610953404422,"results":"34","hashOfConfig":"25"},{"size":2636,"mtime":1611251784432,"results":"35","hashOfConfig":"25"},{"size":538,"mtime":1611207763363,"results":"36","hashOfConfig":"25"},{"size":152,"mtime":1610828735079,"results":"37","hashOfConfig":"25"},{"size":219,"mtime":1610829281107,"results":"38","hashOfConfig":"25"},{"size":7903,"mtime":1611200442281,"results":"39","hashOfConfig":"25"},{"size":3332,"mtime":1610955559928,"results":"40","hashOfConfig":"25"},{"size":2044,"mtime":1611030724758,"results":"41","hashOfConfig":"25"},{"size":3333,"mtime":1610955563554,"results":"42","hashOfConfig":"25"},{"size":2044,"mtime":1611030744199,"results":"43","hashOfConfig":"25"},{"size":3308,"mtime":1610957180353,"results":"44","hashOfConfig":"25"},{"size":1998,"mtime":1611030698172,"results":"45","hashOfConfig":"25"},{"size":1596,"mtime":1611123096327,"results":"46","hashOfConfig":"25"},{"size":1650,"mtime":1611098995601,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1nra1zu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},"/Users/vince/Desktop/GitHub/movie-app/src/index.js",[],["109","110"],"/Users/vince/Desktop/GitHub/movie-app/src/App.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/variables.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/static/Header.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Landing.js",["111"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaFireAlt, FaStar, FaClock, FaPlay, FaPlus, FaUserAstronaut } from \"react-icons/fa\";\n\nconst Landing = () => {\n   const bg_url = \"https://www.themoviedb.org/t/p/original/d2UxKyaJ5GgzuHaSsWinFfv3g6L.jpg\";\n\n   return (\n      <div className=\"landing\">\n         <div className=\"landing-wrapper\">\n            <div className=\"content\">\n               <h1>Butter.db</h1>\n               <p>Get updates on the movies you want to see!</p>\n               <div className=\"hotlinks\">\n                  <div className=\"popular\">\n                     {/* Popular */}\n                     <Link to={\"/popular\"}>\n                        <FaFireAlt size=\"1.75em\" />\n                        <p>Popular</p>\n                     </Link>\n                  </div>\n                  <div className=\"top-rated\">\n                     {/* Top Rated */}\n                     <Link to={\"/top-rated\"}>\n                        <FaStar size=\"1.75em\" />\n                        <p>Top Rated</p>\n                     </Link>\n                  </div>\n                  <div className=\"upcoming\">\n                     {/* Upcoming */}\n                     <Link to={\"/upcoming\"}>\n                        <FaClock size=\"1.75em\" />\n                        <p>Upcoming</p>\n                     </Link>\n                  </div>\n                  <div className=\"now-playing\">\n                     {/* Now Playing */}\n                     <Link to={\"/now-playing\"}>\n                        <FaPlay size=\"1.75em\" />\n                        <p>Now Playing</p>\n                     </Link>\n                  </div>\n                  <div className=\"favourites\">\n                     {/* Favourites */}\n                     <Link to={\"/favourites\"}>\n                        <FaPlus size=\"1.75em\" />\n                        <p>Favourites</p>\n                     </Link>\n                  </div>\n                  <div className=\"about\">\n                     {/* Favourites */}\n                     <Link to={\"/about\"}>\n                        <FaUserAstronaut size=\"1.75em\" />\n                        <p>About</p>\n                     </Link>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Landing;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Favourites.js",["112"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../globals/utilities\";\nimport { removeWatchlist } from \"../../globals/watchlist\";\nimport { removeLikes } from \"../../globals/likes\";\n//Components\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\nimport Sidebar from \"../static/Sidebar\";\nimport { FaHeart, FaPlus } from \"react-icons/fa\";\n\nconst Favourites = () => {\n   const [liked, setLiked] = useState(null);\n   const [watchlist, setWatchlist] = useState(null);\n   let likesIsEmpty = true;\n   let watchlistIsEmpty = true;\n   //* Likes\n   const fetchLocalStorage = () => {\n      //Likes\n      const data_liked = localStorage.getItem(\"Likes\");\n      const response_liked = JSON.parse(data_liked);\n\n      //Watchlist\n      const data_watchlist = localStorage.getItem(\"Watchlist\");\n      const response_watchlist = JSON.parse(data_watchlist);\n\n      if (response_liked.length > 0) {\n         console.log(\"Liked not empty\");\n         likesIsEmpty = false;\n      } else {\n         console.log(\"Liked Empty!\");\n         likesIsEmpty = true;\n      }\n      if (response_watchlist.length > 0) {\n         console.log(\"Watchlist not empty\");\n         watchlistIsEmpty = false;\n      } else {\n         console.log(\"Watchlist empty!\");\n         watchlistIsEmpty = true;\n      }\n\n      //Set State\n      setLiked(response_liked);\n      setWatchlist(response_watchlist);\n   };\n   useEffect(() => {\n      fetchLocalStorage();\n   }, []);\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"favourites-container\">\n               {/* Likes */}\n               <div className=\"likes-container\">\n                  <h2 className=\"title-likes\">\n                     {\" \"}\n                     <span>\n                        <FaHeart size=\"0.75em\" color=\"red\" />\n                     </span>\n                     My Likes\n                  </h2>\n                  <div className=\"render-likes\">\n                     {console.log(likesIsEmpty)}\n                     {console.log(watchlistIsEmpty)}\n                     {/* Map all liked items from local storage */}\n                     {liked !== null &&\n                        liked.map((movie) => {\n                           return (\n                              <div className=\"likes-item\">\n                                 <img\n                                    src={`https://www.themoviedb.org/t/p/original${movie.moviePoster}`}\n                                    alt={`${movie.movieId}`}\n                                    width=\"150\"\n                                 />\n                                 <div className=\"info\">\n                                    <p className=\"title\">\n                                       {movie.movieTitle}{\" \"}\n                                       <span\n                                          style={{\n                                             backgroundColor: ratingColor(movie.movieRating),\n                                          }}\n                                       >\n                                          {percentNumber(movie.movieRating)}\n                                       </span>\n                                    </p>\n                                    <p className=\"release\">{formatDate(movie.movieRelease)}</p>\n                                    <div className=\"action-btns\">\n                                       <button\n                                          className=\"remove\"\n                                          onClick={() => {\n                                             removeLikes(movie.movieId);\n                                             fetchLocalStorage();\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                       <button className=\"more-info\">\n                                          <Link>More Info</Link>\n                                       </button>\n                                    </div>\n                                 </div>\n                              </div>\n                           );\n                        })}\n                  </div>\n               </div>\n\n               {/* Watchlist */}\n               <div className=\"watchlist-container\">\n                  <h2 className=\"title-watchlist\">\n                     <span>\n                        <FaPlus size=\"0.75em\" />\n                     </span>\n                     My Watchlist\n                  </h2>\n                  <div className=\"render-watchlist\">\n                     {/* Watchlist Items */}\n                     {watchlist !== null &&\n                        watchlist.map((movie) => {\n                           return (\n                              <div className=\"watchlist-item\">\n                                 <img\n                                    src={`https://www.themoviedb.org/t/p/original${movie.moviePoster}`}\n                                    alt={`${movie.movieTitle}`}\n                                    width=\"150\"\n                                 />\n                                 <div className=\"info\">\n                                    <p className=\"title\">\n                                       {movie.movieTitle}{\" \"}\n                                       <span\n                                          style={{\n                                             backgroundColor: `${ratingColor(movie.movieRating)}`,\n                                          }}\n                                       >\n                                          {percentNumber(movie.movieRating)}\n                                       </span>\n                                    </p>\n                                    <p className=\"release\">January 15, 1996</p>\n                                    <div className=\"action-btns\">\n                                       <button\n                                          className=\"remove\"\n                                          onClick={() => {\n                                             removeWatchlist(movie.movieId);\n                                             fetchLocalStorage();\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                       <button className=\"more-info\">\n                                          <Link>More Info</Link>\n                                       </button>\n                                    </div>\n                                 </div>\n                              </div>\n                           );\n                        })}\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Favourites;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/About.js",["113"],"import React from \"react\";\nimport Sidebar from \"../static/Sidebar\";\nimport Footer from \"../static/Footer\";\nimport Header from \"../static/Header\";\nimport { useState, useEffect } from \"react\";\n\nconst About = () => {\n   const [isAbout, setIsAbout] = useState(true);\n   useEffect(() => {\n      if (isAbout) {\n         const footerSelector = document.querySelector(\"footer\");\n         footerSelector.style.cssText = \"position: fixed; bottom: 0px; left: 0px;\";\n      }\n   });\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"about-container\">\n               {/* Application Description */}\n               <div className=\"app-info\">\n                  <h2 className=\"title\">About Butter.DB</h2>\n                  <p className=\"description\">\n                     {\" \"}\n                     Butter.DB allows users to view relevant information regarding upcoming, top\n                     rated, popular or newly released movies. In addition, this app is capable of\n                     letting users bookmark movies via like or add movies to a watchlist.\n                  </p>\n               </div>\n\n               {/* Movie DB Api Description */}\n               <div className=\"tmdb-info\">\n                  <img\n                     src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\"\n                     alt=\"TMDB Logo\"\n                     width=\"150\"\n                  />\n                  <p className=\"description\">\n                     This product uses the TMDb API but is not endorsed or certified by TMDb.\n                  </p>\n               </div>\n               {/* Powered By React */}\n               <div className=\"react-info\">\n                  <h2 className=\"title\">Powered By React.JS</h2>\n                  <p className=\"description\">\n                     Butter.DB is a small project that combines HTML5, SCSS, Javascript, React.JS to\n                     create a simple full stack application.\n                  </p>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default About;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Footer.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/Popular.js",["114","115"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport PopularMovie from \"./PopularMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Popular = () => {\n   //! <-------- useState Variable -------->\n   const [popularMovies, setPopularMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchPopularMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setPopularMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchPopularMovies();\n   }, []);\n   if (popularMovies !== null) {\n      console.log(popularMovies);\n   }\n\n   // <----- Current Page ------>\n   const [isPopular, setIsPopular] = useState(true);\n   if (isPopular == true && popularMovies !== null) {\n      const selector = document.querySelector(\"a.popular h2\");\n      selector.classList.add(\"page-id\");\n   }\n   //* <---------- Render Component ----------------->\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {popularMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${popularMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${popularMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {popularMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(popularMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${popularMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Popular Titles</h2>\n                  <main className=\"render-titles\">\n                     {popularMovies !== null &&\n                        popularMovies.map((movie) => {\n                           return (\n                              <PopularMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Popular;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Sidebar.js",["116","117","118","119","120","121","122","123"],"import React from \"react\";\nimport { FaFireAlt, FaStar, FaClock, FaPlay, FaFilter, FaRegPlusSquare } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { api_key, poster_base } from \"../../globals/variables\";\nimport { useState, useEffect } from \"react\";\n\nconst Sidebar = () => {\n   //? <----- fetch data ----->\n   const [latest, setLatest] = useState(null);\n   const latest_url = `https://api.themoviedb.org/3/movie/latest?api_key=${api_key}&language=en-US`;\n   const fetchLatest = async () => {\n      const data_latest = await fetch(latest_url);\n      const data_response = await data_latest.json();\n      setLatest(data_response);\n   };\n   useEffect(() => {\n      fetchLatest();\n      if (latest !== null) {\n         console.log(latest);\n      }\n   }, []);\n   //? <----- end of fetch data ------->\n\n   //! <---- utility for toggling sidebar on larger screens ---->\n   window.addEventListener(\"resize\", () => {\n      let mql = window.matchMedia(\"(min-width: 1050px)\");\n      const sidebar = document.querySelector(\"aside\");\n\n      if (mql.matches == true) {\n         sidebar.classList.add(\"sidebar-on\");\n      } else {\n         sidebar.classList.remove(\"sidebar-on\");\n      }\n   });\n   useEffect(() => {\n      let mql = window.matchMedia(\"(min-width: 1050px)\");\n      const sidebar = document.querySelector(\"aside\");\n\n      if (mql.matches == true) {\n         sidebar.classList.add(\"sidebar-on\");\n      }\n   }, []);\n   return (\n      <aside className=\"sidebar-off\">\n         {/* <--- Filter section of the sidebar ---> */}\n         <div className=\"filter\">\n            <div className=\"heading\">\n               <FaFilter />\n               <h1>Filter</h1>\n            </div>\n            <div className=\"filter-items\">\n               <Link className=\"popular\" to={\"/popular\"}>\n                  <h2>Popular</h2>\n               </Link>\n               <Link className=\"top-rated\" to={\"/top-rated\"}>\n                  <h2>Top Rated</h2>\n               </Link>\n               <Link className=\"upcoming\" to={\"/upcoming\"}>\n                  <h2>Upcoming</h2>\n               </Link>\n               <Link className=\"now-playing\" to={\"/now-playing\"}>\n                  <h2>Now Playing</h2>\n               </Link>\n            </div>\n         </div>\n         {/* <--- Latest ---> */}\n         <div className=\"latest\">\n            <div className=\"heading\">\n               <FaRegPlusSquare size=\"1.2em\" />\n               <h1> Recently Added </h1>\n            </div>\n            <div className=\"latest-items\">\n               <ul>{latest !== null && <li id={latest.id}>{latest.title}</li>}</ul>\n            </div>\n         </div>\n      </aside>\n   );\n};\n\nexport default Sidebar;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/PopularMovie.js",["124"],"import React from \"react\";\nimport { FaHeart, FaArrowRight, FaPlus } from \"react-icons/fa\";\nimport { shortenPars } from \"../../../globals/shortenPars\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate } from \"../../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../../globals/utilities\";\n\n//* Manage Favourites\nimport { addLikes, removeLikes } from \"../../../globals/likes\";\nimport { addWatchlist, removeWatchlist } from \"../../../globals/watchlist\";\nconst PopularMovie = ({ title, score, id, poster, backdrop, release, overview }) => {\n   return (\n      <article\n         className=\"thumbnail\"\n         id={id}\n         onMouseEnter={() => {\n            const body = window.document.querySelector(\"body\");\n            body.style.backgroundImage = `url(https://www.themoviedb.org/t/p/original${backdrop})`;\n         }}\n      >\n         <div className=\"poster\">\n            <img src={`https://www.themoviedb.org/t/p/original${poster}`} alt={title} />\n         </div>\n         <div className=\"info\">\n            <h2>{title}</h2>\n            <p className=\"release-date\">{formatDate(release)}</p>\n            <p className=\"short-overview\">{shortenPars(overview)}</p>\n            <div className=\"action-btns\">\n               <div className=\"rating-btn\">\n                  <span className=\"rating\" style={{ backgroundColor: `${ratingColor(score)}` }}>\n                     {percentNumber(score)}\n                  </span>\n                  <p> Rating </p>\n               </div>\n               <div className=\"like\">\n                  <FaHeart\n                     className={`heart-${id}`}\n                     color=\"black\"\n                     onClick={() => {\n                        addLikes(title, id, score, poster, release);\n                     }}\n                     onDoubleClick={() => {\n                        removeLikes(title, id, score, poster, release);\n                     }}\n                  />{\" \"}\n                  <p>Like</p>\n               </div>\n               <div className=\"watchlist\">\n                  <FaPlus\n                     color=\"black\"\n                     onClick={() => {\n                        addWatchlist(title, id, score, poster);\n                     }}\n                  />\n                  <p> Add to Watchlist</p>\n               </div>\n               <Link to={`/info/${id}`}>\n                  <div className=\"more-info\">\n                     <FaArrowRight color=\"black\" />\n                     <p> More Info</p>\n                  </div>\n               </Link>\n            </div>\n         </div>\n      </article>\n   );\n};\n\nexport default PopularMovie;\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/utilities.js",["125"],"//Floor given integer (vote count and popularity)\nexport const floorNumber = (int) => {\n   return Math.floor(int);\n};\n\n//Change rating into percentage\nexport const percentNumber = (int) => {\n   return `${Math.floor(int * 10)}%`;\n};\n\n//Change color of rating\nexport const ratingColor = (rating) => {\n   let ratingSelector = document.querySelector(\".thumbnail .rating-btn .rating\");\n   if (rating > 7) {\n      return \"#4CB396\";\n   } else if (rating < 7 && rating > 5.5) {\n      return \"#EA8824\";\n   } else {\n      return \"#FE3736\";\n   }\n};\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/shortenPars.js",[],["126","127"],"/Users/vince/Desktop/GitHub/movie-app/src/globals/formatDate.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Single.js",["128","129","130"],"import React from \"react\";\nimport { api_key, poster_base, backdrop_base } from \"../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { FaHeart, FaPlus, FaUserAlt, FaStar, FaClock } from \"react-icons/fa\";\nimport { formatDate } from \"../../globals/formatDate\";\nimport { floorNumber, percentNumber, ratingColor } from \"../../globals/utilities\";\n\n//Components\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\nimport Sidebar from \"../static/Sidebar\";\nconst Single = (match) => {\n   //? <------- fetch the individual movie info --------->\n   const [movieInfo, setMovieInfo] = useState(null);\n   const fetchSingleItem = async () => {\n      const data_id = await fetch(\n         `https://api.themoviedb.org/3/movie/${match.match.params.id}?api_key=${api_key}&language=en-US`\n      );\n      const response_id = await data_id.json();\n      setMovieInfo(response_id);\n   };\n   //? <------ fetch the individual movie cast --------->\n   const [cast, setCast] = useState(null);\n   const fetchCast = async () => {\n      let url = `https://api.themoviedb.org/3/movie/${match.match.params.id}/credits?api_key=${api_key}&language=en-US`;\n      const data_cast = await fetch(url);\n      const response_cast = await data_cast.json();\n      setCast(response_cast);\n   };\n   //! <----- Utility for changing the background to current movie on load ------>\n   const changeBackdropToCurrent = () => {\n      let bodySelector = window.document.querySelector(\"body\");\n      if (movieInfo !== null) {\n         let url = `${backdrop_base}${movieInfo.backdrop_path}`;\n         bodySelector.style.backgroundImage = `url(${url})`;\n      }\n   };\n   window.onload = () => {\n      changeBackdropToCurrent();\n   };\n\n   //? <------ fetch effect to run the function once on component render ------->\n   useEffect(() => {\n      fetchSingleItem();\n      fetchCast();\n      changeBackdropToCurrent();\n   }, []);\n\n   //? <------ console.log() the movieInfo object ------->\n   // if (movieInfo !== null) {\n   //    console.log(movieInfo);\n   // }\n   if (cast !== null) {\n      console.log(cast);\n   }\n\n   //* <---------- Render Component Below ------------>\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            {\" \"}\n            <Sidebar />\n            <div className=\"single-container\">\n               <div className=\"render-single\">\n                  {/* <----- Above the fold info -----> */}\n                  <div className=\"movie-overview\">\n                     <img\n                        src={movieInfo !== null && `${poster_base}${movieInfo.poster_path}`}\n                        alt={movieInfo !== null && `${movieInfo.title}`}\n                        width=\"250\"\n                        className=\"poster\"\n                     />\n                     {/* <-------- General Info Section ----------> */}\n                     {movieInfo !== null && (\n                        <div className=\"general-info\">\n                           <h1 className=\"title\">\n                              <span\n                                 className=\"rating\"\n                                 style={{\n                                    backgroundColor: `${ratingColor(movieInfo.vote_average)}`,\n                                 }}\n                              >\n                                 {percentNumber(movieInfo.vote_average)}\n                              </span>\n                              {movieInfo.title}{\" \"}\n                           </h1>\n                           <hr />\n                           <ul className=\"header\">\n                              <li className=\"adult\">\n                                 {movieInfo.adult == true ? \"Rated-R\" : \"PG-13\"}\n                              </li>\n                              <li className=\"status\">{movieInfo.status}</li>\n                              <li className=\"runtime\">{movieInfo.runtime + \" min\"}</li>\n                              <li className=\"one-genre\">{movieInfo.genres[0].name}</li>\n                              <li className=\"language\">\n                                 {movieInfo.spoken_languages[0].english_name}\n                              </li>\n                           </ul>\n\n                           <h2 className=\"release\">\n                              <span>Release Date:</span> {formatDate(movieInfo.release_date)}\n                           </h2>\n                           <p className=\"tagline\">\n                              {movieInfo.tagline !== null\n                                 ? movieInfo.tagline\n                                 : \"Movie does not contain a tagline.\"}\n                           </p>\n                           {/* Overview */}\n                           <h2 className=\"overview-title\"> Overview</h2>\n                           <p className=\"overview\">{movieInfo.overview}</p>\n                           <hr />\n                           {/* Action Buttons */}\n                           <div className=\"single-action-btns\">\n                              <div className=\"single-votes\">\n                                 <FaUserAlt size=\"1.5em\" color=\"black\" />\n                                 <p>\n                                    {floorNumber(movieInfo.vote_count)} <br />\n                                    Votes\n                                 </p>\n                              </div>\n                              <div className=\"single-popularity\">\n                                 <FaStar size=\"1.5em\" color=\"black\" />\n                                 <p>\n                                    {\" \"}\n                                    {floorNumber(movieInfo.popularity)} <br />\n                                    Popularity\n                                 </p>\n                              </div>\n                              <div className=\"single-like\">\n                                 <FaHeart size=\"1.5em\" color=\"black\" />\n                                 <p>Like</p>\n                              </div>\n                              <div className=\"single-watchlist\">\n                                 <FaPlus size=\"1.5em\" color=\"black\" />\n                                 <p>Watchlist</p>\n                              </div>\n                           </div>\n                        </div>\n                     )}\n                  </div>\n\n                  {/* <---------- Cast and Crew --------------> */}\n                  <div className=\"cast\">\n                     <h2 className=\"cast-title\">Cast and Crew</h2>\n                     <hr />\n                     <div className=\"render-cast\">\n                        {cast !== null && cast.cast.length > 0 ? (\n                           cast.cast.map((person) => {\n                              return (\n                                 <div className=\"cast-member\">\n                                    <img\n                                       src={\n                                          person.profile_path == null\n                                             ? \"/assets/blank.svg\"\n                                             : `${poster_base}${person.profile_path}`\n                                       }\n                                       alt={person.name}\n                                       width=\"200\"\n                                    />\n                                    <p className=\"name\">{person.name}</p>\n                                    <p className=\"character\">{person.character}</p>\n                                 </div>\n                              );\n                           })\n                        ) : (\n                           <p className=\"no-cast\"> No Cast to Fetch </p>\n                        )}\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Single;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRated.js",["131","132"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport TopRatedMovie from \"./TopRatedMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst TopRated = () => {\n   //! <-------- useState Variable -------->\n   const [topRatedMovies, setTopRatedMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchTopRatedMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setTopRatedMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchTopRatedMovies();\n   }, []);\n   if (topRatedMovies !== null) {\n      console.log(topRatedMovies);\n   }\n   // <----- Current Page ------>\n   const [isTopRated, setisTopRated] = useState(true);\n   if (isTopRated == true && topRatedMovies !== null) {\n      const selector = document.querySelector(\"a.top-rated h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {topRatedMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${topRatedMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${topRatedMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {topRatedMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(topRatedMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${topRatedMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Top Rated Titles</h2>\n                  <main className=\"render-titles\">\n                     {topRatedMovies !== null &&\n                        topRatedMovies.map((movie) => {\n                           return (\n                              <TopRatedMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default TopRated;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRatedMovie.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/Upcoming.js",["133","134"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport UpcomingMovie from \"./UpcomingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Upcoming = () => {\n   //! <-------- useState Variable -------->\n   const [upcomingMovies, setUpcomingMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchUpcomingMovies = async () => {\n      const data_upcoming = await fetch(\n         `https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_upcoming = await data_upcoming.json();\n      setUpcomingMovies(response_upcoming.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchUpcomingMovies();\n   }, []);\n   if (upcomingMovies !== null) {\n      console.log(upcomingMovies);\n   }\n   // <----- Current Page ------>\n   const [isUpcoming, setisUpcoming] = useState(true);\n   if (isUpcoming == true && upcomingMovies !== null) {\n      const selector = document.querySelector(\"a.upcoming h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {upcomingMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${upcomingMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${upcomingMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {upcomingMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(upcomingMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${upcomingMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Upcoming Titles</h2>\n                  <main className=\"render-titles\">\n                     {upcomingMovies !== null &&\n                        upcomingMovies.map((movie) => {\n                           return (\n                              <UpcomingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Upcoming;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/UpcomingMovie.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlaying.js",["135","136"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport NowPlayingMovie from \"./NowPlayingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst NowPlaying = () => {\n   //! <-------- useState Variable -------->\n   const [nowPlaying, setNowPlaying] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchNowPlaying = async () => {\n      const data_now_playing = await fetch(\n         `https://api.themoviedb.org/3/movie/now_playing?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_now_playing = await data_now_playing.json();\n      setNowPlaying(response_now_playing.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchNowPlaying();\n   }, []);\n   // if (nowPlaying !== null) {\n   //    console.log(nowPlaying);\n   // }\n   // <----- Current Page ------>\n   const [isNowPlaying, setIsNowPlaying] = useState(true);\n   if (isNowPlaying == true && nowPlaying !== null) {\n      const selector = document.querySelector(\"a.now-playing h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {nowPlaying !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${nowPlaying[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${nowPlaying[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {nowPlaying[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(nowPlaying[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${nowPlaying[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Now Playing</h2>\n                  <main className=\"render-titles\">\n                     {nowPlaying !== null &&\n                        nowPlaying.map((movie) => {\n                           return (\n                              <NowPlayingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default NowPlaying;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlayingMovie.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/likes.js",["137","138","139"],"//* <-------- Add to Likes -------->\nexport const addLikes = (title, id, rating, poster, release) => {\n   const movieToBeAdded = {\n      movieTitle: title,\n      movieId: id,\n      movieRating: rating,\n      moviePoster: poster,\n      movieRelease: release,\n   };\n   //If Likes doesnt exist create it in local storage\n   if (localStorage.Likes == undefined) {\n      localStorage.setItem(\"Likes\", JSON.stringify([]));\n   }\n\n   const data_likes = localStorage.getItem(\"Likes\");\n   const response_likes = JSON.parse(data_likes);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_likes.findIndex((movie) => id == movie.movieId);\n   console.log(indexOfQuery);\n   if (indexOfQuery < 0) {\n      response_likes.push(movieToBeAdded);\n   } else {\n      console.log(\"Already Added\");\n   }\n\n   localStorage.setItem(\"Likes\", JSON.stringify(response_likes));\n};\n\n//! <------- Remove Likes ----------->\nexport const removeLikes = (id) => {\n   const data_likes = localStorage.getItem(\"Likes\");\n   const response_likes = JSON.parse(data_likes);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_likes.findIndex((movie) => id == movie.movieId);\n   console.log(indexOfQuery);\n\n   //* Remove the index of the id from local storage\n   //* Check if the indexQuery exists (not -1)\n   if (indexOfQuery > -1) {\n      response_likes.splice(indexOfQuery, 1);\n   } else {\n      console.log(\"ID doesnt exists\");\n   }\n\n   //* Store to local storage\n   localStorage.setItem(\"Likes\", JSON.stringify(response_likes));\n};\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/watchlist.js",["140","141","142"],"//* <-------- Add to Watchlist -------->\nexport const addWatchlist = (title, id, rating, poster) => {\n   const movieToBeAdded = {\n      movieTitle: title,\n      movieId: id,\n      movieRating: rating,\n      moviePoster: poster,\n   };\n   //If Watchlist doesnt exist create it in local storage\n   if (localStorage.Watchlist == undefined) {\n      localStorage.setItem(\"Watchlist\", JSON.stringify([]));\n   }\n\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n   console.log(indexOfQuery);\n   if (indexOfQuery < 0) {\n      response_watchlist.push(movieToBeAdded);\n   } else {\n      console.log(\"Already Added\");\n   }\n\n   localStorage.setItem(\"Watchlist\", JSON.stringify(response_watchlist));\n};\n\n//! <------- Remove Watchlist ----------->\nexport const removeWatchlist = (id) => {\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n   console.log(indexOfQuery);\n\n   //* Remove the index of the id from local storage\n   //* Check if the indexQuery exists (not -1)\n   if (indexOfQuery > -1) {\n      response_watchlist.splice(indexOfQuery, 1);\n   } else {\n      console.log(\"ID doesnt exists\");\n   }\n\n   //* Store to local storage\n   localStorage.setItem(\"Watchlist\", JSON.stringify(response_watchlist));\n};\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":50,"column":7,"nodeType":"153","endLine":50,"endColumn":9,"suggestions":"154"},{"ruleId":"147","severity":1,"message":"155","line":8,"column":20,"nodeType":"149","messageId":"150","endLine":8,"endColumn":30},{"ruleId":"147","severity":1,"message":"156","line":32,"column":22,"nodeType":"149","messageId":"150","endLine":32,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":33,"column":18,"nodeType":"159","messageId":"160","endLine":33,"endColumn":20},{"ruleId":"147","severity":1,"message":"161","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":19},{"ruleId":"147","severity":1,"message":"162","line":2,"column":21,"nodeType":"149","messageId":"150","endLine":2,"endColumn":27},{"ruleId":"147","severity":1,"message":"163","line":2,"column":29,"nodeType":"149","messageId":"150","endLine":2,"endColumn":36},{"ruleId":"147","severity":1,"message":"164","line":2,"column":38,"nodeType":"149","messageId":"150","endLine":2,"endColumn":44},{"ruleId":"147","severity":1,"message":"165","line":4,"column":19,"nodeType":"149","messageId":"150","endLine":4,"endColumn":30},{"ruleId":"151","severity":1,"message":"166","line":21,"column":7,"nodeType":"153","endLine":21,"endColumn":9,"suggestions":"167"},{"ruleId":"157","severity":1,"message":"158","line":29,"column":23,"nodeType":"159","messageId":"160","endLine":29,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":39,"column":23,"nodeType":"159","messageId":"160","endLine":39,"endColumn":25},{"ruleId":"147","severity":1,"message":"168","line":10,"column":24,"nodeType":"149","messageId":"150","endLine":10,"endColumn":39},{"ruleId":"147","severity":1,"message":"169","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":22},{"ruleId":"143","replacedBy":"170"},{"ruleId":"145","replacedBy":"171"},{"ruleId":"147","severity":1,"message":"163","line":4,"column":46,"nodeType":"149","messageId":"150","endLine":4,"endColumn":53},{"ruleId":"151","severity":1,"message":"172","line":47,"column":7,"nodeType":"153","endLine":47,"endColumn":9,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"158","line":91,"column":51,"nodeType":"159","messageId":"160","endLine":91,"endColumn":53},{"ruleId":"147","severity":1,"message":"174","line":31,"column":23,"nodeType":"149","messageId":"150","endLine":31,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":32,"column":19,"nodeType":"159","messageId":"160","endLine":32,"endColumn":21},{"ruleId":"147","severity":1,"message":"175","line":31,"column":23,"nodeType":"149","messageId":"150","endLine":31,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":32,"column":19,"nodeType":"159","messageId":"160","endLine":32,"endColumn":21},{"ruleId":"147","severity":1,"message":"176","line":31,"column":25,"nodeType":"149","messageId":"150","endLine":31,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":32,"column":21,"nodeType":"159","messageId":"160","endLine":32,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":11,"column":27,"nodeType":"159","messageId":"160","endLine":11,"endColumn":29},{"ruleId":"157","severity":1,"message":"158","line":19,"column":64,"nodeType":"159","messageId":"160","endLine":19,"endColumn":66},{"ruleId":"157","severity":1,"message":"158","line":36,"column":64,"nodeType":"159","messageId":"160","endLine":36,"endColumn":66},{"ruleId":"157","severity":1,"message":"158","line":10,"column":31,"nodeType":"159","messageId":"160","endLine":10,"endColumn":33},{"ruleId":"157","severity":1,"message":"158","line":18,"column":68,"nodeType":"159","messageId":"160","endLine":18,"endColumn":70},{"ruleId":"157","severity":1,"message":"158","line":35,"column":68,"nodeType":"159","messageId":"160","endLine":35,"endColumn":70},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'bg_url' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLocalStorage'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'setIsAbout' is assigned a value but never used.","'setIsPopular' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaFireAlt' is defined but never used.","'FaStar' is defined but never used.","'FaClock' is defined but never used.","'FaPlay' is defined but never used.","'poster_base' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchLatest' and 'latest'. Either include them or remove the dependency array.",["180"],"'removeWatchlist' is defined but never used.","'ratingSelector' is assigned a value but never used.",["177"],["178"],"React Hook useEffect has missing dependencies: 'changeBackdropToCurrent', 'fetchCast', and 'fetchSingleItem'. Either include them or remove the dependency array.",["181"],"'setisTopRated' is assigned a value but never used.","'setisUpcoming' is assigned a value but never used.","'setIsNowPlaying' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [fetchLocalStorage]",{"range":"188","text":"189"},"Update the dependencies array to be: [fetchLatest, latest]",{"range":"190","text":"191"},"Update the dependencies array to be: [changeBackdropToCurrent, fetchCast, fetchSingleItem]",{"range":"192","text":"193"},[1609,1611],"[fetchLocalStorage]",[773,775],"[fetchLatest, latest]",[1919,1921],"[changeBackdropToCurrent, fetchCast, fetchSingleItem]"]