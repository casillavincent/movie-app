[{"/Users/vince/Desktop/GitHub/movie-app/src/index.js":"1","/Users/vince/Desktop/GitHub/movie-app/src/App.js":"2","/Users/vince/Desktop/GitHub/movie-app/src/globals/variables.js":"3","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Header.js":"4","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Landing.js":"5","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Favourites.js":"6","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/About.js":"7","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Footer.js":"8","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/Popular.js":"9","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Sidebar.js":"10","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/PopularMovie.js":"11","/Users/vince/Desktop/GitHub/movie-app/src/globals/utilities.js":"12","/Users/vince/Desktop/GitHub/movie-app/src/globals/shortenPars.js":"13","/Users/vince/Desktop/GitHub/movie-app/src/globals/formatDate.js":"14","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Single.js":"15","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRated.js":"16","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRatedMovie.js":"17","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/Upcoming.js":"18","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/UpcomingMovie.js":"19","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlaying.js":"20","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlayingMovie.js":"21","/Users/vince/Desktop/GitHub/movie-app/src/globals/likes.js":"22","/Users/vince/Desktop/GitHub/movie-app/src/globals/watchlist.js":"23","/Users/vince/Desktop/GitHub/movie-app/src/globals/heart.js":"24","/Users/vince/Desktop/GitHub/movie-app/src/globals/plus.js":"25","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Credits.js":"26","/Users/vince/Desktop/GitHub/movie-app/src/component/static/NoPage.js":"27"},{"size":230,"mtime":1611688789000,"results":"28","hashOfConfig":"29"},{"size":1634,"mtime":1611722592979,"results":"30","hashOfConfig":"29"},{"size":210,"mtime":1611721901266,"results":"31","hashOfConfig":"29"},{"size":2029,"mtime":1611721907596,"results":"32","hashOfConfig":"29"},{"size":2303,"mtime":1611688789000,"results":"33","hashOfConfig":"29"},{"size":7128,"mtime":1611720435390,"results":"34","hashOfConfig":"29"},{"size":2584,"mtime":1611688789000,"results":"35","hashOfConfig":"29"},{"size":1879,"mtime":1611721909268,"results":"36","hashOfConfig":"29"},{"size":3286,"mtime":1611688789000,"results":"37","hashOfConfig":"29"},{"size":9439,"mtime":1611721906147,"results":"38","hashOfConfig":"29"},{"size":3991,"mtime":1611688789000,"results":"39","hashOfConfig":"29"},{"size":538,"mtime":1611721899939,"results":"40","hashOfConfig":"29"},{"size":152,"mtime":1611721898173,"results":"41","hashOfConfig":"29"},{"size":219,"mtime":1611721887477,"results":"42","hashOfConfig":"29"},{"size":11546,"mtime":1611721052870,"results":"43","hashOfConfig":"29"},{"size":3259,"mtime":1611688789000,"results":"44","hashOfConfig":"29"},{"size":4149,"mtime":1611688789000,"results":"45","hashOfConfig":"29"},{"size":3259,"mtime":1611688789000,"results":"46","hashOfConfig":"29"},{"size":4149,"mtime":1611688789000,"results":"47","hashOfConfig":"29"},{"size":3249,"mtime":1611688789000,"results":"48","hashOfConfig":"29"},{"size":4055,"mtime":1611720449326,"results":"49","hashOfConfig":"29"},{"size":1440,"mtime":1611721891736,"results":"50","hashOfConfig":"29"},{"size":1529,"mtime":1611721902779,"results":"51","hashOfConfig":"29"},{"size":376,"mtime":1611721889558,"results":"52","hashOfConfig":"29"},{"size":399,"mtime":1611721896622,"results":"53","hashOfConfig":"29"},{"size":1110,"mtime":1611721917124,"results":"54","hashOfConfig":"29"},{"size":449,"mtime":1611723089675,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1nra1zu",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"58"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vince/Desktop/GitHub/movie-app/src/index.js",[],["131","132"],"/Users/vince/Desktop/GitHub/movie-app/src/App.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/variables.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/static/Header.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Landing.js",["133"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaFireAlt, FaStar, FaClock, FaPlay, FaPlus, FaUserAstronaut } from \"react-icons/fa\";\n\nconst Landing = () => {\n   const bg_url = \"https://www.themoviedb.org/t/p/original/d2UxKyaJ5GgzuHaSsWinFfv3g6L.jpg\";\n\n   return (\n      <div className=\"landing\">\n         <div className=\"landing-wrapper\">\n            <div className=\"content\">\n               <h1>Butter.DB</h1>\n               <p>Get updates on the movies you want to see!</p>\n               <div className=\"hotlinks\">\n                  <div className=\"popular\">\n                     {/* Popular */}\n                     <Link to={\"/popular\"}>\n                        <FaFireAlt size=\"1.75em\" />\n                        <p>Popular</p>\n                     </Link>\n                  </div>\n                  <div className=\"top-rated\">\n                     {/* Top Rated */}\n                     <Link to={\"/top-rated\"}>\n                        <FaStar size=\"1.75em\" />\n                        <p>Top Rated</p>\n                     </Link>\n                  </div>\n                  <div className=\"upcoming\">\n                     {/* Upcoming */}\n                     <Link to={\"/upcoming\"}>\n                        <FaClock size=\"1.75em\" />\n                        <p>Upcoming</p>\n                     </Link>\n                  </div>\n                  <div className=\"now-playing\">\n                     {/* Now Playing */}\n                     <Link to={\"/now-playing\"}>\n                        <FaPlay size=\"1.75em\" />\n                        <p>Now Playing</p>\n                     </Link>\n                  </div>\n                  <div className=\"favourites\">\n                     {/* Favourites */}\n                     <Link to={\"/favourites\"}>\n                        <FaPlus size=\"1.75em\" />\n                        <p>Favourites</p>\n                     </Link>\n                  </div>\n                  <div className=\"about\">\n                     {/* Favourites */}\n                     <Link to={\"/about\"}>\n                        <FaUserAstronaut size=\"1.75em\" />\n                        <p>About</p>\n                     </Link>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Landing;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Favourites.js",["134","135","136","137"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../globals/utilities\";\nimport { removeWatchlist } from \"../../globals/watchlist\";\nimport { removeLikes } from \"../../globals/likes\";\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\nimport Sidebar from \"../static/Sidebar\";\nimport { FaHeart, FaPlus } from \"react-icons/fa\";\n\nconst Favourites = () => {\n   const [liked, setLiked] = useState(null);\n   const [watchlist, setWatchlist] = useState(null);\n   //* Likes\n   const fetchLocalStorage = () => {\n      //Likes\n      const data_liked = localStorage.getItem(\"Likes\");\n      const response_liked = JSON.parse(data_liked);\n\n      //Watchlist\n      const data_watchlist = localStorage.getItem(\"Watchlist\");\n      const response_watchlist = JSON.parse(data_watchlist);\n\n      //Set State\n      setLiked(response_liked);\n      setWatchlist(response_watchlist);\n   };\n\n   useEffect(() => {\n      fetchLocalStorage();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"favourites-container\">\n               {/* Likes */}\n               <div className=\"likes-container\">\n                  <h2 className=\"title-likes\">\n                     {\" \"}\n                     <span>\n                        <FaHeart size=\"0.75em\" color=\"red\" />\n                     </span>\n                     My Likes\n                  </h2>\n                  <div className=\"render-likes\">\n                     {/* Map all liked items from local storage */}\n                     {liked == undefined || liked.length == 0 ? (\n                        <h2 className=\"no-likes\">\n                           Nothing to see here! Go back and add movies you like.\n                        </h2>\n                     ) : (\n                        liked.map((movie) => {\n                           return (\n                              <div className={`likes-item likes-item-${movie.movieId}`}>\n                                 <img\n                                    src={`https://www.themoviedb.org/t/p/original${movie.moviePoster}`}\n                                    alt={`${movie.movieId}`}\n                                    width=\"150\"\n                                 />\n                                 <div className=\"info\">\n                                    <p className=\"title\">\n                                       {movie.movieTitle}{\" \"}\n                                       <span\n                                          style={{\n                                             backgroundColor: ratingColor(movie.movieRating),\n                                          }}\n                                       >\n                                          {percentNumber(movie.movieRating)}\n                                       </span>\n                                    </p>\n                                    <p className=\"release\">{formatDate(movie.movieRelease)}</p>\n                                    <div className=\"action-btns\">\n                                       <button\n                                          className=\"remove\"\n                                          onClick={() => {\n                                             removeLikes(movie.movieId);\n                                             fetchLocalStorage();\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                       <button className=\"more-info\">\n                                          <Link to={`/info/${movie.movieId}`}>More Info</Link>\n                                       </button>\n                                    </div>\n                                 </div>\n                              </div>\n                           );\n                        })\n                     )}\n                  </div>\n               </div>\n\n               {/* Watchlist */}\n               <div className=\"watchlist-container\">\n                  <h2 className=\"title-watchlist\">\n                     <span>\n                        <FaPlus size=\"0.75em\" />\n                     </span>\n                     My Watchlist\n                  </h2>\n                  <div className=\"render-watchlist\">\n                     {/* Watchlist Items */}\n                     {watchlist == undefined || watchlist.length == 0 ? (\n                        <h2 className=\"no-watchlist\">\n                           Nothing to see here! Add movies you want to see.\n                        </h2>\n                     ) : (\n                        watchlist.map((movie) => {\n                           return (\n                              <div className=\"watchlist-item\">\n                                 <img\n                                    src={`https://www.themoviedb.org/t/p/original${movie.moviePoster}`}\n                                    alt={`${movie.movieTitle}`}\n                                    width=\"150\"\n                                 />\n                                 <div className=\"info\">\n                                    <p className=\"title\">\n                                       {movie.movieTitle}{\" \"}\n                                       <span\n                                          style={{\n                                             backgroundColor: `${ratingColor(movie.movieRating)}`,\n                                          }}\n                                       >\n                                          {percentNumber(movie.movieRating)}\n                                       </span>\n                                    </p>\n                                    <p className=\"release\">{formatDate(movie.movieRelease)}</p>\n                                    <div className=\"action-btns\">\n                                       <button\n                                          className=\"remove\"\n                                          onClick={() => {\n                                             removeWatchlist(movie.movieId);\n                                             fetchLocalStorage();\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                       <button className=\"more-info\">\n                                          <Link to={`/info/${movie.movieId}`}>More Info</Link>\n                                       </button>\n                                    </div>\n                                 </div>\n                              </div>\n                           );\n                        })\n                     )}\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Favourites;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/About.js",["138"],"import React from \"react\";\nimport Sidebar from \"../static/Sidebar\";\nimport Footer from \"../static/Footer\";\nimport Header from \"../static/Header\";\nimport { useState, useEffect } from \"react\";\nimport { FaReact } from \"react-icons/fa\";\n\nconst About = () => {\n   const [isAbout, setIsAbout] = useState(true);\n   useEffect(() => {\n      if (isAbout) {\n         const footerSelector = document.querySelector(\"footer\");\n         footerSelector.style.cssText = \"position: fixed; bottom: 0px; left: 0px;\";\n      }\n   });\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"about-container\">\n               {/* Application Description */}\n               <div className=\"app-info\">\n                  <h2 className=\"title\">About Butter.DB</h2>\n                  <p className=\"description\">\n                     {\" \"}\n                     Butter.DB allows users to view relevant information regarding upcoming, top\n                     rated, popular or newly released movies. In addition, this app is capable of\n                     letting users bookmark movies via like or add movies to a watchlist.\n                  </p>\n               </div>\n\n               {/* Movie DB Api Description */}\n               <div className=\"tmdb-info\">\n                  <img\n                     src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\"\n                     alt=\"TMDB Logo\"\n                     width=\"150\"\n                  />\n                  <p className=\"description\">\n                     This product uses the TMDb API but is not endorsed or certified by TMDb.\n                  </p>\n               </div>\n               {/* Powered By React */}\n               <div className=\"react-info\">\n                  <h2 className=\"title\">\n                     {\" \"}\n                     Powered By{\" \"}\n                     <FaReact\n                        color=\"#61DAFB\"\n                        size=\"0.7em\"\n                        style={{ marginRight: \"4px\", marginLeft: \"7px\" }}\n                     />\n                     React.JS\n                  </h2>\n                  <p className=\"description\">\n                     Butter.DB is a small project that combines HTML5, SCSS, Javascript, React.JS to\n                     create a simple full stack application.\n                  </p>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default About;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Footer.js",["139"],"import React from \"react\";\nimport { FaReact, FaGithub } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport { AiFillLinkedin } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n   return (\n      <footer>\n         <div className=\"column column01\">\n            <p className=\"footer-large-text\">Powered By:</p>\n            <div className=\"react-logo\">\n               <FaReact size=\"1em\" color=\"#61dafb\" />\n               <p className=\"footer-normal-text\"> React </p>\n            </div>\n         </div>\n\n         <div className=\"column column02\">\n            <p className=\"footer-large-text\"> &copy; Vincent Casilla 2020 </p>\n            <p className=\"footer-normal-text\"> For Education Purposes Only </p>\n            <p className=\"footer-normal-text\">\n               {\" \"}\n               <Link to={\"/credits\"} style={{ color: \"#7893E4\", textDecoration: \"none\" }}>\n                  Credits\n               </Link>{\" \"}\n            </p>\n         </div>\n\n         <div className=\"column column03\">\n            <p className=\"footer-large-text\"> Connect With Me</p>\n            <div className=\"social-menu\">\n               <div className=\"social-menu-github\">\n                  <a href=\"https://github.com/casillavincent\" target=\"_blank\">\n                     <FaGithub size=\"1.5em\" color=\"white\" />\n                  </a>\n               </div>\n               <div className=\"social-menu-email\">\n                  <a href=\"mailto:vcasilla1@my.bcit.ca?subject=Hello Vincent!\">\n                     <MdEmail size=\"1.5em\" color=\"white\" />\n                  </a>\n               </div>\n               <div className=\"social-menu-linkedin\">\n                  {\" \"}\n                  <AiFillLinkedin size=\"1.5em\" color=\"white\" />\n               </div>\n            </div>\n         </div>\n      </footer>\n   );\n};\n\nexport default Footer;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/Popular.js",["140","141"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport PopularMovie from \"./PopularMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Popular = () => {\n   //! <-------- useState Variable -------->\n   const [popularMovies, setPopularMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchPopularMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setPopularMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchPopularMovies();\n   }, []);\n\n   // <----- Current Page ------>\n   const [isPopular, setIsPopular] = useState(true);\n   if (isPopular == true && popularMovies !== null) {\n      const selector = document.querySelector(\"a.popular h2\");\n      selector.classList.add(\"page-id\");\n   }\n   //* <---------- Render Component ----------------->\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {popularMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${popularMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${popularMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {popularMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(popularMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${popularMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Popular Titles</h2>\n                  <main className=\"render-titles\">\n                     {popularMovies !== null &&\n                        popularMovies.map((movie) => {\n                           return (\n                              <PopularMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Popular;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Sidebar.js",["142","143"],"import React from \"react\";\nimport { FaStar, FaFilter, FaRegPlusSquare } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { api_key, poster_base } from \"../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { percentNumber, ratingColor } from \"../../globals/utilities\";\n\nconst Sidebar = () => {\n   //? <----- fetch data ----->\n   const [latest, setLatest] = useState(null);\n   const [trending, setTrending] = useState(null);\n   const latest_url = `https://api.themoviedb.org/3/movie/latest?api_key=${api_key}&language=en-US`;\n\n   const fetchLatest = async () => {\n      const data_latest = await fetch(latest_url);\n      const data_response = await data_latest.json();\n      setLatest(data_response);\n   };\n\n   const fetchTrending = async () => {\n      const data_trending = await fetch(\n         `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n      );\n      const response_trending = await data_trending.json();\n      setTrending(response_trending.results);\n   };\n   useEffect(() => {\n      fetchLatest();\n      fetchTrending();\n   }, []);\n\n   //? <---- utility for toggling sidebar on larger screens ---->\n   const isDesktop = (e) => {\n      const sidebar = document.querySelector(\"aside\");\n      const footerSelector = document.querySelector(\"footer\");\n\n      if (e.matches) {\n         sidebar.classList.add(\"sidebar-on\");\n         if (footerSelector.classList.contains(\"footer-off\")) {\n            footerSelector.classList.remove(\"footer-off\");\n         }\n      } else {\n         if (sidebar.classList.contains(\"sidebar-on\")) {\n            sidebar.classList.remove(\"sidebar-on\");\n         }\n      }\n   };\n   useEffect(() => {\n      let mql = window.matchMedia(\"(min-width: 1050px)\");\n      const sidebar = document.querySelector(\"aside\");\n\n      mql.addListener(isDesktop);\n\n      if (mql.matches === true) {\n         sidebar.classList.add(\"sidebar-on\");\n      }\n\n      //? Remove event listener if the sidebar component doesnt get mounted\n      return () => mql.removeListener(isDesktop);\n   }, []);\n\n   return (\n      <aside className=\"sidebar-off\">\n         {/* <--- Filter section of the sidebar ---> */}\n         <div className=\"filter\">\n            <div className=\"heading\">\n               <FaFilter />\n               <h1>Filter</h1>\n            </div>\n            <div className=\"filter-items\">\n               <Link className=\"popular\" to={\"/popular\"}>\n                  <h2>Popular</h2>\n               </Link>\n               <Link className=\"top-rated\" to={\"/top-rated\"}>\n                  <h2>Top Rated</h2>\n               </Link>\n               <Link className=\"upcoming\" to={\"/upcoming\"}>\n                  <h2>Upcoming</h2>\n               </Link>\n               <Link className=\"now-playing\" to={\"/now-playing\"}>\n                  <h2>Now Playing</h2>\n               </Link>\n            </div>\n         </div>\n\n         {/* <--- Latest ---> */}\n         <div className=\"latest\">\n            <div className=\"heading\">\n               <FaRegPlusSquare size=\"1.2em\" />\n               <h1> Recently Added </h1>\n            </div>\n            <div className=\"latest-items\">\n               <ul>{latest !== null && <li id={latest.id}>{latest.title}</li>}</ul>\n            </div>\n         </div>\n\n         {/* <---- Trending ----> */}\n         <div className=\"trending\">\n            <div className=\"heading\">\n               <FaStar size=\"1em\" />\n               <h1>Trending Titles</h1>\n            </div>\n            <div className=\"trending-items\">\n               {trending !== null && (\n                  <ul>\n                     {/* First Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[0].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[0].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[0].vote_average)}\n                           </span>\n                           {trending[0].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Second Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[1].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[1].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[1].vote_average)}\n                           </span>\n                           {trending[1].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Third Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[2].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[2].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[2].vote_average)}\n                           </span>\n                           {trending[2].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* FOurth Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[3].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[3].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[3].vote_average)}\n                           </span>\n                           {trending[3].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Fifth item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[4].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[4].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[4].vote_average)}\n                           </span>{\" \"}\n                           {trending[4].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Sixth Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[5].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[5].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[5].vote_average)}\n                           </span>\n                           {trending[5].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Seventh Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[6].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[6].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[6].vote_average)}\n                           </span>\n                           {trending[6].title}{\" \"}\n                        </Link>\n                     </li>\n                  </ul>\n               )}\n            </div>\n         </div>\n      </aside>\n   );\n};\n\nexport default Sidebar;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/PopularMovie.js",["144","145","146","147","148","149","150"],"import React from \"react\";\nimport { FaHeart, FaArrowRight, FaPlus } from \"react-icons/fa\";\nimport { shortenPars } from \"../../../globals/shortenPars\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate } from \"../../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../../globals/utilities\";\nimport { toggleHeart } from \"../../../globals/heart\";\nimport { togglePlus } from \"../../../globals/plus\";\nimport { useState, useEffect } from \"react\";\n\n//* Manage Favourites\nimport { addLikes, removeLikes } from \"../../../globals/likes\";\nimport { addWatchlist, removeWatchlist } from \"../../../globals/watchlist\";\nconst PopularMovie = ({ title, score, id, poster, backdrop, release, overview }) => {\n   const [heartState, setHeartState] = useState(false);\n   const [plusState, setPlusState] = useState(false);\n   useEffect(() => {\n      if (toggleHeart(id) == true) {\n         setHeartState(true);\n      } else {\n         setHeartState(false);\n      }\n      if (togglePlus(id) == true) {\n         setPlusState(true);\n      } else {\n         setPlusState(false);\n      }\n   }, []);\n   return (\n      <article\n         className=\"thumbnail\"\n         id={id}\n         onMouseEnter={() => {\n            const body = window.document.querySelector(\"body\");\n            body.style.backgroundImage = `url(https://www.themoviedb.org/t/p/original${backdrop})`;\n         }}\n      >\n         <div className=\"poster\">\n            <Link to={`/info/${id}`}>\n               <img\n                  src={\n                     poster !== null\n                        ? `https://www.themoviedb.org/t/p/original${poster}`\n                        : \"/assets/bank-poster.jpg\"\n                  }\n                  alt={title}\n               />{\" \"}\n            </Link>\n         </div>\n         <div className=\"info\">\n            <h2>{title}</h2>\n            <p className=\"release-date\">{formatDate(release)}</p>\n            <p className=\"short-overview\">{shortenPars(overview)}</p>\n            <div className=\"action-btns\">\n               <div className=\"rating-btn\">\n                  <span className=\"rating\" style={{ backgroundColor: `${ratingColor(score)}` }}>\n                     {percentNumber(score)}\n                  </span>\n                  <p> Rating </p>\n               </div>\n               <div className=\"like\">\n                  <FaHeart\n                     size=\"1.1em\"\n                     className={`heart-${id}`}\n                     color={heartState == true ? \"red\" : \"black\"}\n                     onClick={() => {\n                        addLikes(title, id, score, poster, release);\n                        toggleHeart(id);\n                        setHeartState(true);\n                        if (heartState == true) {\n                           removeLikes(id);\n                           setHeartState(false);\n                        }\n                     }}\n                  />{\" \"}\n                  <p>Like</p>\n               </div>\n               <div className=\"watchlist\">\n                  <FaPlus\n                     size=\"1.1em\"\n                     color={plusState == true ? \"#7995E6\" : \"black\"}\n                     // Toggles the watchlist\n                     onClick={() => {\n                        addWatchlist(title, id, score, poster, release);\n                        togglePlus(id);\n                        setPlusState(true);\n                        if (plusState == true) {\n                           removeWatchlist(id);\n                           setPlusState(false);\n                        }\n                     }}\n                  />\n                  <p> Add to Watchlist</p>\n               </div>\n               <Link to={`/info/${id}`}>\n                  <div className=\"more-info\">\n                     <FaArrowRight color=\"black\" size=\"1.1em\" />\n                     <p> More Info</p>\n                  </div>\n               </Link>\n            </div>\n         </div>\n      </article>\n   );\n};\n\nexport default PopularMovie;\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/utilities.js",["151"],"//Floor given integer (vote count and popularity)\nexport const floorNumber = (int) => {\n   return Math.floor(int);\n};\n\n//Change rating into percentage\nexport const percentNumber = (int) => {\n   return `${Math.floor(int * 10)}%`;\n};\n\n//Change color of rating\nexport const ratingColor = (rating) => {\n   let ratingSelector = document.querySelector(\".thumbnail .rating-btn .rating\");\n   if (rating > 7) {\n      return \"#4CB396\";\n   } else if (rating < 7 && rating > 5.5) {\n      return \"#7995E6\";\n   } else {\n      return \"#FE3736\";\n   }\n};\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/shortenPars.js",[],["152","153"],"/Users/vince/Desktop/GitHub/movie-app/src/globals/formatDate.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Single.js",["154","155","156","157","158","159"],"import React from \"react\";\nimport { api_key, poster_base, backdrop_base } from \"../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { FaHeart, FaPlus, FaUserAlt, FaStar, FaClock } from \"react-icons/fa\";\nimport { formatDate } from \"../../globals/formatDate\";\nimport { floorNumber, percentNumber, ratingColor } from \"../../globals/utilities\";\nimport { toggleHeart } from \"../../globals/heart\";\nimport { togglePlus } from \"../../globals/plus\";\nimport { addLikes, removeLikes } from \"../../globals/likes\";\nimport { addWatchlist, removeWatchlist } from \"../../globals/watchlist\";\n\n//Components\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\nimport Sidebar from \"../static/Sidebar\";\n\nconst Single = (match) => {\n   //? <------- fetch the individual movie info --------->\n   const [movieInfo, setMovieInfo] = useState(null);\n   const fetchSingleItem = async () => {\n      const data_id = await fetch(\n         `https://api.themoviedb.org/3/movie/${match.match.params.id}?api_key=${api_key}&language=en-US`\n      );\n      const response_id = await data_id.json();\n      setMovieInfo(response_id);\n   };\n\n   //? <------ fetch the individual movie cast --------->\n   const [cast, setCast] = useState(null);\n   const fetchCast = async () => {\n      let url = `https://api.themoviedb.org/3/movie/${match.match.params.id}/credits?api_key=${api_key}&language=en-US`;\n      const data_cast = await fetch(url);\n      const response_cast = await data_cast.json();\n      setCast(response_cast);\n   };\n\n   //Fetch video\n   const [videos, setVideos] = useState(null);\n   const fetchVideos = async () => {\n      let url = `https://api.themoviedb.org/3/movie/${match.match.params.id}/videos?api_key=${api_key}&language=en-US`;\n      const data_videos = await fetch(url);\n      const response_videos = await data_videos.json();\n      setVideos(response_videos);\n   };\n\n   //! <----- Utility for changing the background to current movie on load ------>\n   const changeBackdropToCurrent = () => {\n      let bodySelector = window.document.querySelector(\"body\");\n      if (movieInfo !== null) {\n         let url = `${backdrop_base}${movieInfo.backdrop_path}`;\n         bodySelector.style.backgroundImage = `url(${url})`;\n      }\n   };\n   //? <--------- Set the icon state for like and watchlist --------->\n   const [heartState, setHeartState] = useState(false);\n   const [plusState, setPlusState] = useState(false);\n\n   //? <------ fetch effect to run the function once on component render ------->\n   useEffect(() => {\n      fetchSingleItem();\n      fetchCast();\n      fetchVideos();\n   }, []);\n\n   changeBackdropToCurrent();\n\n   //* <---------- Render Component Below ------------>\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            {\" \"}\n            <Sidebar />\n            <div className=\"single-container\">\n               <div className=\"render-single\">\n                  {/* <----- Top general info -----> */}\n                  <div className=\"movie-overview\">\n                     <img\n                        src={\n                           movieInfo !== null && movieInfo.poster_path !== null\n                              ? `${poster_base}${movieInfo.poster_path}`\n                              : `/assets/blank-poster.jpg`\n                        }\n                        alt={movieInfo !== null && `${movieInfo.title}`}\n                        width=\"250\"\n                        className=\"poster\"\n                     />\n\n                     {/* <-------- General Info Section ----------> */}\n                     {movieInfo !== null && (\n                        <div className=\"general-info\">\n                           <h1 className=\"title\">\n                              <span\n                                 className=\"rating\"\n                                 style={{\n                                    backgroundColor: `${ratingColor(movieInfo.vote_average)}`,\n                                 }}\n                              >\n                                 {percentNumber(movieInfo.vote_average)}\n                              </span>\n                              {movieInfo.title}{\" \"}\n                           </h1>\n                           <hr />\n                           <ul className=\"header\">\n                              <li className=\"adult\">\n                                 {movieInfo.adult === true ? \"Rated-R\" : \"PG-13\"}\n                              </li>\n                              <li className=\"status\">{movieInfo.status}</li>\n                              <li className=\"runtime\">{movieInfo.runtime + \" min\"}</li>\n                              <li className=\"one-genre\">{movieInfo.genres[0].name}</li>\n                              <li className=\"language\">\n                                 {movieInfo.spoken_languages[0].english_name}\n                              </li>\n                           </ul>\n\n                           <h2 className=\"release\">\n                              <span>Release Date:</span> {formatDate(movieInfo.release_date)}\n                           </h2>\n                           <p className=\"tagline\">\n                              {movieInfo.tagline !== null\n                                 ? movieInfo.tagline\n                                 : \"Movie does not contain a tagline.\"}\n                           </p>\n                           {/* Overview */}\n                           <h2 className=\"overview-title\"> Overview</h2>\n                           <p className=\"overview\">{movieInfo.overview}</p>\n                           <hr />\n                           {/* Action Buttons */}\n                           <div className=\"single-action-btns\">\n                              <div className=\"single-votes\">\n                                 <FaUserAlt size=\"1.5em\" color=\"white\" />\n                                 <p>\n                                    {floorNumber(movieInfo.vote_count)} <br />\n                                    Votes\n                                 </p>\n                              </div>\n                              <div className=\"single-popularity\">\n                                 <FaStar size=\"1.5em\" color=\"white\" />\n                                 <p>\n                                    {\" \"}\n                                    {floorNumber(movieInfo.popularity)} <br />\n                                    Popularity\n                                 </p>\n                              </div>\n                              <div className=\"single-like\">\n                                 <FaHeart\n                                    size=\"1.5em\"\n                                    color={toggleHeart(movieInfo.id) == true ? \"red\" : \"white\"}\n                                    onClick={() => {\n                                       addLikes(\n                                          movieInfo.title,\n                                          movieInfo.id,\n                                          movieInfo.vote_average,\n                                          movieInfo.poster_path,\n                                          movieInfo.release_date\n                                       );\n                                       toggleHeart(movieInfo.id);\n                                       setHeartState(true);\n                                       if (heartState == true) {\n                                          removeLikes(movieInfo.id);\n                                          setHeartState(false);\n                                       }\n                                    }}\n                                 />\n                                 <p>Like</p>\n                              </div>\n                              <div className=\"single-watchlist\">\n                                 <FaPlus\n                                    size=\"1.5em\"\n                                    color={togglePlus(movieInfo.id) == true ? \"#7995E6\" : \"white\"}\n                                    // Toggles the watchlist\n                                    onClick={() => {\n                                       addWatchlist(\n                                          movieInfo.title,\n                                          movieInfo.id,\n                                          movieInfo.vote_average,\n                                          movieInfo.poster_path,\n                                          movieInfo.release_date\n                                       );\n                                       togglePlus(movieInfo.id);\n                                       setPlusState(true);\n                                       if (plusState == true) {\n                                          removeWatchlist(movieInfo.id);\n                                          setPlusState(false);\n                                       }\n                                    }}\n                                 />\n                                 <p>Watchlist</p>\n                              </div>\n                           </div>\n                        </div>\n                     )}\n                  </div>\n\n                  {/* <---------- Trailer -------------> */}\n                  {videos !== null && videos.results[0] !== undefined && (\n                     <div className=\"trailer\">\n                        <h2 className=\"trailer-title\">{videos.results[0].name}</h2>\n                        <hr />\n                        <iframe\n                           width=\"560\"\n                           height=\"315\"\n                           src={`https://www.youtube.com/embed/${videos.results[0].key}`}\n                           frameborder=\"0\"\n                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                           allowfullscreen\n                           title=\"Video\"\n                        ></iframe>\n                     </div>\n                  )}\n\n                  {/* <---------- Cast and Crew --------------> */}\n                  <div className=\"cast\">\n                     <h2 className=\"cast-title\">Cast and Crew</h2>\n                     <hr />\n                     <div className=\"render-cast\">\n                        {cast !== null && cast.cast.length > 0 ? (\n                           cast.cast.map((person) => {\n                              return (\n                                 <div className=\"cast-member\">\n                                    <img\n                                       src={\n                                          person.profile_path == null\n                                             ? \"/assets/blank.svg\"\n                                             : `${poster_base}${person.profile_path}`\n                                       }\n                                       alt={person.name}\n                                       width=\"200\"\n                                    />\n                                    <p className=\"name\">{person.name}</p>\n                                    <p className=\"character\">{person.character}</p>\n                                 </div>\n                              );\n                           })\n                        ) : (\n                           <p className=\"no-cast\"> No Cast to Fetch </p>\n                        )}\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Single;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRated.js",["160","161"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport TopRatedMovie from \"./TopRatedMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst TopRated = () => {\n   //! <-------- useState Variable -------->\n   const [topRatedMovies, setTopRatedMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchTopRatedMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setTopRatedMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchTopRatedMovies();\n   }, []);\n\n   // <----- Current Page ------>\n   const [isTopRated, setisTopRated] = useState(true);\n   if (isTopRated == true && topRatedMovies !== null) {\n      const selector = document.querySelector(\"a.top-rated h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {topRatedMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${topRatedMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${topRatedMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {topRatedMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(topRatedMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${topRatedMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Top Rated Titles</h2>\n                  <main className=\"render-titles\">\n                     {topRatedMovies !== null &&\n                        topRatedMovies.map((movie) => {\n                           return (\n                              <TopRatedMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default TopRated;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRatedMovie.js",["162","163","164","165","166","167","168","169"],"import React from \"react\";\nimport { FaHeart, FaArrowRight, FaPlus } from \"react-icons/fa\";\nimport { shortenPars } from \"../../../globals/shortenPars\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate } from \"../../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../../globals/utilities\";\nimport { useState, useEffect } from \"react\";\nimport { addLikes, removeLikes } from \"../../../globals/likes\";\nimport { addWatchlist, removeWatchlist } from \"../../../globals/watchlist\";\nimport { toggleHeart } from \"../../../globals/heart\";\nimport { togglePlus } from \"../../../globals/plus\";\n\nconst TopRatedMovie = ({ title, score, id, poster, backdrop, release, overview }) => {\n   const [heartState, setHeartState] = useState(false);\n   const [plusState, setPlusState] = useState(false);\n\n   useEffect(() => {\n      if (toggleHeart(id) == true) {\n         setHeartState(true);\n      } else {\n         setHeartState(false);\n      }\n      if (togglePlus(id) == true) {\n         setPlusState(true);\n      } else {\n         setPlusState(false);\n      }\n   }, []);\n   return (\n      <article\n         className=\"thumbnail\"\n         id={id}\n         onMouseEnter={() => {\n            const body = window.document.querySelector(\"body\");\n            body.style.backgroundImage = `url(https://www.themoviedb.org/t/p/original${backdrop})`;\n         }}\n      >\n         <div className=\"poster\">\n            <Link to={`/info/${id}`}>\n               <img\n                  src={\n                     poster !== null\n                        ? `https://www.themoviedb.org/t/p/original${poster}`\n                        : \"/assets/bank-poster.jpg\"\n                  }\n                  alt={title}\n               />\n            </Link>\n         </div>\n         <div className=\"info\">\n            <h2>{title}</h2>\n            <p className=\"release-date\">{formatDate(release)}</p>\n            <p className=\"short-overview\">{shortenPars(overview)}</p>\n            <div className=\"action-btns\">\n               <div className=\"rating-btn\">\n                  <span className=\"rating\" style={{ backgroundColor: `${ratingColor(score)}` }}>\n                     {percentNumber(score)}\n                  </span>\n                  <p> Rating </p>\n               </div>\n               <Link>\n                  <div className=\"like\">\n                     <FaHeart\n                        size=\"1.1em\"\n                        color={heartState == true ? \"red\" : \"black\"}\n                        onClick={() => {\n                           addLikes(title, id, score, poster, release);\n                           toggleHeart(id);\n                           setHeartState(true);\n                           if (heartState == true) {\n                              removeLikes(id);\n                              setHeartState(false);\n                           }\n                        }}\n                     />{\" \"}\n                     <p>Like</p>\n                  </div>\n               </Link>\n\n               <Link>\n                  <div className=\"watchlist\">\n                     <FaPlus\n                        size=\"1.1em\"\n                        color=\"black\"\n                        color={plusState == true ? \"#7995E6\" : \"black\"}\n                        // Toggles the watchlist\n                        onClick={() => {\n                           addWatchlist(title, id, score, poster, release);\n                           togglePlus(id);\n                           setPlusState(true);\n                           if (plusState == true) {\n                              removeWatchlist(id);\n                              setPlusState(false);\n                           }\n                        }}\n                     />\n                     <p> Add to Watchlist</p>\n                  </div>\n               </Link>\n\n               <Link to={`/info/${id}`}>\n                  <div className=\"more-info\">\n                     <FaArrowRight color=\"black\" size=\"1.1em\" />\n                     <p> More Info</p>\n                  </div>\n               </Link>\n            </div>\n         </div>\n      </article>\n   );\n};\n\nexport default TopRatedMovie;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/Upcoming.js",["170","171"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport UpcomingMovie from \"./UpcomingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Upcoming = () => {\n   //! <-------- useState Variable -------->\n   const [upcomingMovies, setUpcomingMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchUpcomingMovies = async () => {\n      const data_upcoming = await fetch(\n         `https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_upcoming = await data_upcoming.json();\n      setUpcomingMovies(response_upcoming.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchUpcomingMovies();\n   }, []);\n   // <----- Current Page ------>\n   const [isUpcoming, setisUpcoming] = useState(true);\n   if (isUpcoming == true && upcomingMovies !== null) {\n      const selector = document.querySelector(\"a.upcoming h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {upcomingMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${upcomingMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${upcomingMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {upcomingMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(upcomingMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${upcomingMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Upcoming Titles</h2>\n                  <main className=\"render-titles\">\n                     {upcomingMovies !== null &&\n                        upcomingMovies.map((movie) => {\n                           return (\n                              <UpcomingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Upcoming;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/UpcomingMovie.js",["172","173","174","175","176","177","178","179"],"import React from \"react\";\nimport { FaHeart, FaArrowRight, FaPlus } from \"react-icons/fa\";\nimport { shortenPars } from \"../../../globals/shortenPars\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate } from \"../../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../../globals/utilities\";\nimport { useState, useEffect } from \"react\";\nimport { addLikes, removeLikes } from \"../../../globals/likes\";\nimport { addWatchlist, removeWatchlist } from \"../../../globals/watchlist\";\nimport { toggleHeart } from \"../../../globals/heart\";\nimport { togglePlus } from \"../../../globals/plus\";\n\nconst UpcomingMovie = ({ title, score, id, poster, backdrop, release, overview }) => {\n   const [heartState, setHeartState] = useState(false);\n   const [plusState, setPlusState] = useState(false);\n\n   useEffect(() => {\n      if (toggleHeart(id) == true) {\n         setHeartState(true);\n      } else {\n         setHeartState(false);\n      }\n      if (togglePlus(id) == true) {\n         setPlusState(true);\n      } else {\n         setPlusState(false);\n      }\n   }, []);\n   return (\n      <article\n         className=\"thumbnail\"\n         id={id}\n         onMouseEnter={() => {\n            const body = window.document.querySelector(\"body\");\n            body.style.backgroundImage = `url(https://www.themoviedb.org/t/p/original${backdrop})`;\n         }}\n      >\n         <div className=\"poster\">\n            <Link to={`/info/${id}`}>\n               <img\n                  src={\n                     poster !== null\n                        ? `https://www.themoviedb.org/t/p/original${poster}`\n                        : \"/assets/bank-poster.jpg\"\n                  }\n                  alt={title}\n               />\n            </Link>\n         </div>\n         <div className=\"info\">\n            <h2>{title}</h2>\n            <p className=\"release-date\">{formatDate(release)}</p>\n            <p className=\"short-overview\">{shortenPars(overview)}</p>\n            <div className=\"action-btns\">\n               <div className=\"rating-btn\">\n                  <span className=\"rating\" style={{ backgroundColor: `${ratingColor(score)}` }}>\n                     {percentNumber(score)}\n                  </span>\n                  <p> Rating </p>\n               </div>\n               <Link>\n                  <div className=\"like\">\n                     <FaHeart\n                        size=\"1.1em\"\n                        color={heartState == true ? \"red\" : \"black\"}\n                        onClick={() => {\n                           addLikes(title, id, score, poster, release);\n                           toggleHeart(id);\n                           setHeartState(true);\n                           if (heartState == true) {\n                              removeLikes(id);\n                              setHeartState(false);\n                           }\n                        }}\n                     />{\" \"}\n                     <p>Like</p>\n                  </div>\n               </Link>\n\n               <Link>\n                  <div className=\"watchlist\">\n                     <FaPlus\n                        size=\"1.1em\"\n                        color=\"black\"\n                        color={plusState == true ? \"#7995E6\" : \"black\"}\n                        // Toggles the watchlist\n                        onClick={() => {\n                           addWatchlist(title, id, score, poster, release);\n                           togglePlus(id);\n                           setPlusState(true);\n                           if (plusState == true) {\n                              removeWatchlist(id);\n                              setPlusState(false);\n                           }\n                        }}\n                     />\n                     <p> Add to Watchlist</p>\n                  </div>\n               </Link>\n\n               <Link to={`/info/${id}`}>\n                  <div className=\"more-info\">\n                     <FaArrowRight color=\"black\" size=\"1.1em\" />\n                     <p> More Info</p>\n                  </div>\n               </Link>\n            </div>\n         </div>\n      </article>\n   );\n};\n\nexport default UpcomingMovie;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlaying.js",["180","181"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport NowPlayingMovie from \"./NowPlayingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst NowPlaying = () => {\n   //! <-------- useState Variable -------->\n   const [nowPlaying, setNowPlaying] = useState(null);\n   //! <-------------- Fetch data --------->\n   const fetchNowPlaying = async () => {\n      const data_now_playing = await fetch(\n         `https://api.themoviedb.org/3/movie/now_playing?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_now_playing = await data_now_playing.json();\n      setNowPlaying(response_now_playing.results);\n   };\n\n   //! <----------- useEffect -------------->\n   useEffect(() => {\n      fetchNowPlaying();\n   }, []);\n   // <----- Current Page ------>\n   const [isNowPlaying, setIsNowPlaying] = useState(true);\n   if (isNowPlaying == true && nowPlaying !== null) {\n      const selector = document.querySelector(\"a.now-playing h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {nowPlaying !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${nowPlaying[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${nowPlaying[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {nowPlaying[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(nowPlaying[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${nowPlaying[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Now Playing</h2>\n                  <main className=\"render-titles\">\n                     {nowPlaying !== null &&\n                        nowPlaying.map((movie) => {\n                           return (\n                              <NowPlayingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default NowPlaying;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlayingMovie.js",["182","183","184","185","186","187","188","189"],"import React from \"react\";\nimport { FaHeart, FaArrowRight, FaPlus } from \"react-icons/fa\";\nimport { shortenPars } from \"../../../globals/shortenPars\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate } from \"../../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../../globals/utilities\";\nimport { useState, useEffect } from \"react\";\nimport { addLikes, removeLikes } from \"../../../globals/likes\";\nimport { addWatchlist, removeWatchlist } from \"../../../globals/watchlist\";\nimport { toggleHeart } from \"../../../globals/heart\";\nimport { togglePlus } from \"../../../globals/plus\";\n\nconst NowPlayingMovie = ({ title, score, id, poster, backdrop, release, overview }) => {\n   const [heartState, setHeartState] = useState(false);\n   const [plusState, setPlusState] = useState(false);\n\n   useEffect(() => {\n      if (toggleHeart(id) == true) {\n         setHeartState(true);\n      } else {\n         setHeartState(false);\n      }\n      if (togglePlus(id) == true) {\n         setPlusState(true);\n      } else {\n         setPlusState(false);\n      }\n   }, []);\n   return (\n      <article\n         className=\"thumbnail\"\n         id={id}\n         onMouseEnter={() => {\n            const body = window.document.querySelector(\"body\");\n            body.style.backgroundImage = `url(https://www.themoviedb.org/t/p/original${backdrop})`;\n         }}\n      >\n         <div className=\"poster\">\n            <Link to={`/info/${id}`}>\n               <img\n                  src={\n                     poster !== null\n                        ? `https://www.themoviedb.org/t/p/original${poster}`\n                        : \"/assets/bank-poster.jpg\"\n                  }\n                  alt={title}\n               />\n            </Link>\n         </div>\n         <div className=\"info\">\n            <h2>{title}</h2>\n            <p className=\"release-date\">{formatDate(release)}</p>\n            <p className=\"short-overview\">{shortenPars(overview)}</p>\n            <div className=\"action-btns\">\n               <div className=\"rating-btn\">\n                  <span className=\"rating\" style={{ backgroundColor: `${ratingColor(score)}` }}>\n                     {percentNumber(score)}\n                  </span>\n                  <p> Rating </p>\n               </div>\n               <div className=\"like\">\n                  <FaHeart\n                     size=\"1.1em\"\n                     color={heartState == true ? \"red\" : \"black\"}\n                     onClick={() => {\n                        addLikes(title, id, score, poster, release);\n                        toggleHeart(id);\n                        setHeartState(true);\n                        if (heartState == true) {\n                           removeLikes(id);\n                           setHeartState(false);\n                        }\n                     }}\n                  />\n                  <p>Like</p>\n               </div>\n\n               <Link>\n                  <div className=\"watchlist\">\n                     <FaPlus\n                        size=\"1.1em\"\n                        color=\"black\"\n                        color={plusState == true ? \"#7995E6\" : \"black\"}\n                        // Toggles the watchlist\n                        onClick={() => {\n                           addWatchlist(title, id, score, poster, release);\n                           togglePlus(id);\n                           setPlusState(true);\n                           if (plusState == true) {\n                              removeWatchlist(id);\n                              setPlusState(false);\n                           }\n                        }}\n                     />\n                     <p> Add to Watchlist</p>\n                  </div>\n               </Link>\n\n               <Link to={`/info/${id}`}>\n                  <div className=\"more-info\">\n                     <FaArrowRight size=\"1.1em\" color=\"black\" />\n                     <p> More Info</p>\n                  </div>\n               </Link>\n            </div>\n         </div>\n      </article>\n   );\n};\n\nexport default NowPlayingMovie;\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/likes.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/watchlist.js",["190","191","192"],"//* <-------- Add to Watchlist -------->\nexport const addWatchlist = (title, id, rating, poster, release) => {\n   const movieToBeAdded = {\n      movieTitle: title,\n      movieId: id,\n      movieRating: rating,\n      moviePoster: poster,\n      movieRelease: release,\n   };\n   //If Watchlist doesnt exist create it in local storage\n   if (localStorage.Watchlist == undefined) {\n      localStorage.setItem(\"Watchlist\", JSON.stringify([]));\n   }\n\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n   if (indexOfQuery < 0) {\n      response_watchlist.push(movieToBeAdded);\n   }\n\n   localStorage.setItem(\"Watchlist\", JSON.stringify(response_watchlist));\n};\n\n//! <------- Remove Watchlist ----------->\nexport const removeWatchlist = (id) => {\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n\n   //* Remove the index of the id from local storage\n   //* Check if the indexQuery exists (not -1)\n   if (indexOfQuery > -1) {\n      response_watchlist.splice(indexOfQuery, 1);\n   }\n\n   //* Store to local storage\n   localStorage.setItem(\"Watchlist\", JSON.stringify(response_watchlist));\n};\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/heart.js",["193"],"export const toggleHeart = (id) => {\n   const data_likes = localStorage.getItem(\"Likes\");\n   const response_likes = JSON.parse(data_likes);\n\n   if (localStorage.Likes !== undefined) {\n      const indexOfQuery = response_likes.findIndex((movie) => id == movie.movieId);\n      if (indexOfQuery >= 0) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n};\n","/Users/vince/Desktop/GitHub/movie-app/src/globals/plus.js",["194"],"export const togglePlus = (id) => {\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   if (localStorage.Watchlist !== undefined) {\n      const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n      if (indexOfQuery >= 0) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n};\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Credits.js",["195","196","197"],"import React from \"react\";\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\n\nconst Credits = () => {\n   window.scrollTo(0, 0);\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <div className=\"credits-container\">\n               <h1>Credits</h1>\n               {/* Logo */}\n               <div>\n                  <h2>Butter.DB Logo</h2>\n                  <a href=\"https://www.freepik.com\" title=\"Freepik\" target=\"_blank\">\n                     Freepik\n                  </a>{\" \"}\n                  from{\" \"}\n                  <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target=\"_blank\">\n                     www.flaticon.com\n                  </a>\n               </div>\n\n               {/* Animations */}\n               <div>\n                  <h2>Animasta</h2>\n                  <a href=\"https://animista.net/\" target=\"_blank\">\n                     View Animasta\n                  </a>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Credits;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/NoPage.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":52,"column":29,"nodeType":"208","messageId":"209","endLine":52,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":52,"column":58,"nodeType":"208","messageId":"209","endLine":52,"endColumn":60},{"ruleId":"206","severity":1,"message":"207","line":109,"column":33,"nodeType":"208","messageId":"209","endLine":109,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":109,"column":66,"nodeType":"208","messageId":"209","endLine":109,"endColumn":68},{"ruleId":"202","severity":1,"message":"210","line":9,"column":20,"nodeType":"204","messageId":"205","endLine":9,"endColumn":30},{"ruleId":"211","severity":1,"message":"212","line":33,"column":19,"nodeType":"213","endLine":33,"endColumn":79},{"ruleId":"202","severity":1,"message":"214","line":29,"column":22,"nodeType":"204","messageId":"205","endLine":29,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":30,"column":18,"nodeType":"208","messageId":"209","endLine":30,"endColumn":20},{"ruleId":"202","severity":1,"message":"215","line":4,"column":19,"nodeType":"204","messageId":"205","endLine":4,"endColumn":30},{"ruleId":"216","severity":1,"message":"217","line":30,"column":7,"nodeType":"218","endLine":30,"endColumn":9,"suggestions":"219"},{"ruleId":"206","severity":1,"message":"207","line":18,"column":27,"nodeType":"208","messageId":"209","endLine":18,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":23,"column":26,"nodeType":"208","messageId":"209","endLine":23,"endColumn":28},{"ruleId":"216","severity":1,"message":"220","line":28,"column":7,"nodeType":"218","endLine":28,"endColumn":9,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"207","line":65,"column":40,"nodeType":"208","messageId":"209","endLine":65,"endColumn":42},{"ruleId":"206","severity":1,"message":"207","line":70,"column":40,"nodeType":"208","messageId":"209","endLine":70,"endColumn":42},{"ruleId":"206","severity":1,"message":"207","line":81,"column":39,"nodeType":"208","messageId":"209","endLine":81,"endColumn":41},{"ruleId":"206","severity":1,"message":"207","line":87,"column":39,"nodeType":"208","messageId":"209","endLine":87,"endColumn":41},{"ruleId":"202","severity":1,"message":"222","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":22},{"ruleId":"198","replacedBy":"223"},{"ruleId":"200","replacedBy":"224"},{"ruleId":"202","severity":1,"message":"225","line":4,"column":46,"nodeType":"204","messageId":"205","endLine":4,"endColumn":53},{"ruleId":"216","severity":1,"message":"226","line":63,"column":7,"nodeType":"218","endLine":63,"endColumn":9,"suggestions":"227"},{"ruleId":"206","severity":1,"message":"207","line":148,"column":70,"nodeType":"208","messageId":"209","endLine":148,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":159,"column":55,"nodeType":"208","messageId":"209","endLine":159,"endColumn":57},{"ruleId":"206","severity":1,"message":"207","line":170,"column":69,"nodeType":"208","messageId":"209","endLine":170,"endColumn":71},{"ruleId":"206","severity":1,"message":"207","line":182,"column":54,"nodeType":"208","messageId":"209","endLine":182,"endColumn":56},{"ruleId":"202","severity":1,"message":"228","line":29,"column":23,"nodeType":"204","messageId":"205","endLine":29,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":30,"column":19,"nodeType":"208","messageId":"209","endLine":30,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":18,"column":27,"nodeType":"208","messageId":"209","endLine":18,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":23,"column":26,"nodeType":"208","messageId":"209","endLine":23,"endColumn":28},{"ruleId":"216","severity":1,"message":"220","line":28,"column":7,"nodeType":"218","endLine":28,"endColumn":9,"suggestions":"229"},{"ruleId":"206","severity":1,"message":"207","line":65,"column":43,"nodeType":"208","messageId":"209","endLine":65,"endColumn":45},{"ruleId":"206","severity":1,"message":"207","line":70,"column":43,"nodeType":"208","messageId":"209","endLine":70,"endColumn":45},{"ruleId":"230","severity":1,"message":"231","line":85,"column":25,"nodeType":"232","endLine":85,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":85,"column":42,"nodeType":"208","messageId":"209","endLine":85,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":91,"column":42,"nodeType":"208","messageId":"209","endLine":91,"endColumn":44},{"ruleId":"202","severity":1,"message":"233","line":28,"column":23,"nodeType":"204","messageId":"205","endLine":28,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":29,"column":19,"nodeType":"208","messageId":"209","endLine":29,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":18,"column":27,"nodeType":"208","messageId":"209","endLine":18,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":23,"column":26,"nodeType":"208","messageId":"209","endLine":23,"endColumn":28},{"ruleId":"216","severity":1,"message":"220","line":28,"column":7,"nodeType":"218","endLine":28,"endColumn":9,"suggestions":"234"},{"ruleId":"206","severity":1,"message":"207","line":65,"column":43,"nodeType":"208","messageId":"209","endLine":65,"endColumn":45},{"ruleId":"206","severity":1,"message":"207","line":70,"column":43,"nodeType":"208","messageId":"209","endLine":70,"endColumn":45},{"ruleId":"230","severity":1,"message":"231","line":85,"column":25,"nodeType":"232","endLine":85,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":85,"column":42,"nodeType":"208","messageId":"209","endLine":85,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":91,"column":42,"nodeType":"208","messageId":"209","endLine":91,"endColumn":44},{"ruleId":"202","severity":1,"message":"235","line":28,"column":25,"nodeType":"204","messageId":"205","endLine":28,"endColumn":40},{"ruleId":"206","severity":1,"message":"207","line":29,"column":21,"nodeType":"208","messageId":"209","endLine":29,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":18,"column":27,"nodeType":"208","messageId":"209","endLine":18,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":23,"column":26,"nodeType":"208","messageId":"209","endLine":23,"endColumn":28},{"ruleId":"216","severity":1,"message":"220","line":28,"column":7,"nodeType":"218","endLine":28,"endColumn":9,"suggestions":"236"},{"ruleId":"206","severity":1,"message":"207","line":64,"column":40,"nodeType":"208","messageId":"209","endLine":64,"endColumn":42},{"ruleId":"206","severity":1,"message":"207","line":69,"column":40,"nodeType":"208","messageId":"209","endLine":69,"endColumn":42},{"ruleId":"230","severity":1,"message":"231","line":83,"column":25,"nodeType":"232","endLine":83,"endColumn":72},{"ruleId":"206","severity":1,"message":"207","line":83,"column":42,"nodeType":"208","messageId":"209","endLine":83,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":89,"column":42,"nodeType":"208","messageId":"209","endLine":89,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":11,"column":31,"nodeType":"208","messageId":"209","endLine":11,"endColumn":33},{"ruleId":"206","severity":1,"message":"207","line":19,"column":68,"nodeType":"208","messageId":"209","endLine":19,"endColumn":70},{"ruleId":"206","severity":1,"message":"207","line":33,"column":68,"nodeType":"208","messageId":"209","endLine":33,"endColumn":70},{"ruleId":"206","severity":1,"message":"207","line":6,"column":67,"nodeType":"208","messageId":"209","endLine":6,"endColumn":69},{"ruleId":"206","severity":1,"message":"207","line":6,"column":71,"nodeType":"208","messageId":"209","endLine":6,"endColumn":73},{"ruleId":"211","severity":1,"message":"212","line":16,"column":19,"nodeType":"213","endLine":16,"endColumn":85},{"ruleId":"211","severity":1,"message":"212","line":20,"column":19,"nodeType":"213","endLine":20,"endColumn":88},{"ruleId":"211","severity":1,"message":"212","line":28,"column":19,"nodeType":"213","endLine":28,"endColumn":67},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'bg_url' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setIsAbout' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'setIsPopular' is assigned a value but never used.","'poster_base' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLatest'. Either include it or remove the dependency array.","ArrayExpression",["239"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["240"],"'ratingSelector' is assigned a value but never used.",["237"],["238"],"'FaClock' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchCast', 'fetchSingleItem', and 'fetchVideos'. Either include them or remove the dependency array.",["241"],"'setisTopRated' is assigned a value but never used.",["242"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setisUpcoming' is assigned a value but never used.",["243"],"'setIsNowPlaying' is assigned a value but never used.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"247","fix":"251"},{"desc":"247","fix":"252"},{"desc":"247","fix":"253"},"Update the dependencies array to be: [fetchLatest]",{"range":"254","text":"255"},"Update the dependencies array to be: [id]",{"range":"256","text":"257"},"Update the dependencies array to be: [fetchCast, fetchSingleItem, fetchVideos]",{"range":"258","text":"259"},{"range":"260","text":"257"},{"range":"261","text":"257"},{"range":"262","text":"257"},[1103,1105],"[fetchLatest]",[1099,1101],"[id]",[2621,2623],"[fetchCast, fetchSingleItem, fetchVideos]",[1079,1081],[1079,1081],[1081,1083]]