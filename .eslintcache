[{"/Users/vince/Desktop/GitHub/movie-app/src/index.js":"1","/Users/vince/Desktop/GitHub/movie-app/src/App.js":"2","/Users/vince/Desktop/GitHub/movie-app/src/globals/variables.js":"3","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Header.js":"4","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Landing.js":"5","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Favourites.js":"6","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/About.js":"7","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Footer.js":"8","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/Popular.js":"9","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Sidebar.js":"10","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/PopularMovie.js":"11","/Users/vince/Desktop/GitHub/movie-app/src/globals/utilities.js":"12","/Users/vince/Desktop/GitHub/movie-app/src/globals/shortenPars.js":"13","/Users/vince/Desktop/GitHub/movie-app/src/globals/formatDate.js":"14","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Single.js":"15","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRated.js":"16","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRatedMovie.js":"17","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/Upcoming.js":"18","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/UpcomingMovie.js":"19","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlaying.js":"20","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlayingMovie.js":"21","/Users/vince/Desktop/GitHub/movie-app/src/globals/favourites.js":"22"},{"size":230,"mtime":1610333496618,"results":"23","hashOfConfig":"24"},{"size":1422,"mtime":1610949409264,"results":"25","hashOfConfig":"24"},{"size":235,"mtime":1611013552002,"results":"26","hashOfConfig":"24"},{"size":1829,"mtime":1611012810384,"results":"27","hashOfConfig":"24"},{"size":1726,"mtime":1610950840425,"results":"28","hashOfConfig":"24"},{"size":446,"mtime":1610336749306,"results":"29","hashOfConfig":"24"},{"size":431,"mtime":1610336748177,"results":"30","hashOfConfig":"24"},{"size":1457,"mtime":1610343983168,"results":"31","hashOfConfig":"24"},{"size":3303,"mtime":1610955555774,"results":"32","hashOfConfig":"24"},{"size":2681,"mtime":1610953404422,"results":"33","hashOfConfig":"24"},{"size":2187,"mtime":1611013590249,"results":"34","hashOfConfig":"24"},{"size":68,"mtime":1610953917572,"results":"35","hashOfConfig":"24"},{"size":152,"mtime":1610828735079,"results":"36","hashOfConfig":"24"},{"size":219,"mtime":1610829281107,"results":"37","hashOfConfig":"24"},{"size":7498,"mtime":1611016459261,"results":"38","hashOfConfig":"24"},{"size":3332,"mtime":1610955559928,"results":"39","hashOfConfig":"24"},{"size":1862,"mtime":1610949442892,"results":"40","hashOfConfig":"24"},{"size":3333,"mtime":1610955563554,"results":"41","hashOfConfig":"24"},{"size":1862,"mtime":1610949482348,"results":"42","hashOfConfig":"24"},{"size":3308,"mtime":1610957180353,"results":"43","hashOfConfig":"24"},{"size":1861,"mtime":1611012591197,"results":"44","hashOfConfig":"24"},{"size":176,"mtime":1610958480067,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1nra1zu",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vince/Desktop/GitHub/movie-app/src/index.js",[],["97","98"],"/Users/vince/Desktop/GitHub/movie-app/src/App.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/variables.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/static/Header.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Landing.js",["99"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaFireAlt, FaStar, FaClock, FaPlay } from \"react-icons/fa\";\n\nconst Landing = () => {\n   const bg_url = \"https://www.themoviedb.org/t/p/original/d2UxKyaJ5GgzuHaSsWinFfv3g6L.jpg\";\n\n   return (\n      <div className=\"landing\">\n         <div className=\"landing-wrapper\">\n            <div className=\"content\">\n               <h1>Butter.db</h1>\n               <p>Get updates on the movies you want to see!</p>\n               <div className=\"hotlinks\">\n                  <div className=\"popular\">\n                     {/* Popular */}\n                     <Link to={\"/popular\"}>\n                        <FaFireAlt size=\"1.75em\" />\n                        <p>Popular</p>\n                     </Link>\n                  </div>\n                  <div className=\"top-rated\">\n                     {/* Top Rated */}\n                     <Link to={\"/top-rated\"}>\n                        <FaStar size=\"1.75em\" />\n                        <p>Top Rated</p>\n                     </Link>\n                  </div>\n                  <div className=\"upcoming\">\n                     {/* Upcoming */}\n                     <Link to={\"/upcoming\"}>\n                        <FaClock size=\"1.75em\" />\n                        <p>Upcoming</p>\n                     </Link>\n                  </div>\n                  <div className=\"now-playing\">\n                     {/* Now Playing */}\n                     <Link to={\"/now-playing\"}>\n                        <FaPlay size=\"1.75em\" />\n                        <p>Now Playing</p>\n                     </Link>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Landing;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Favourites.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/About.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/static/Footer.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/Popular.js",["100","101"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport PopularMovie from \"./PopularMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Popular = () => {\n   //! <-------- useState Variable -------->\n   const [popularMovies, setPopularMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchPopularMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setPopularMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchPopularMovies();\n   }, []);\n   if (popularMovies !== null) {\n      console.log(popularMovies);\n   }\n\n   // <----- Current Page ------>\n   const [isPopular, setIsPopular] = useState(true);\n   if (isPopular == true && popularMovies !== null) {\n      const selector = document.querySelector(\"a.popular h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {popularMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${popularMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${popularMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {popularMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(popularMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${popularMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Popular Titles</h2>\n                  <main className=\"render-titles\">\n                     {popularMovies !== null &&\n                        popularMovies.map((movie) => {\n                           return (\n                              <PopularMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Popular;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/static/Sidebar.js",["102","103","104","105","106","107","108","109"],"import React from \"react\";\nimport { FaFireAlt, FaStar, FaClock, FaPlay, FaFilter, FaRegPlusSquare } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { api_key, poster_base } from \"../../globals/variables\";\nimport { useState, useEffect } from \"react\";\n\nconst Sidebar = () => {\n   //? <----- fetch data ----->\n   const [latest, setLatest] = useState(null);\n   const latest_url = `https://api.themoviedb.org/3/movie/latest?api_key=${api_key}&language=en-US`;\n   const fetchLatest = async () => {\n      const data_latest = await fetch(latest_url);\n      const data_response = await data_latest.json();\n      setLatest(data_response);\n   };\n   useEffect(() => {\n      fetchLatest();\n      if (latest !== null) {\n         console.log(latest);\n      }\n   }, []);\n   //? <----- end of fetch data ------->\n\n   //! <---- utility for toggling sidebar on larger screens ---->\n   window.addEventListener(\"resize\", () => {\n      let mql = window.matchMedia(\"(min-width: 1050px)\");\n      const sidebar = document.querySelector(\"aside\");\n\n      if (mql.matches == true) {\n         sidebar.classList.add(\"sidebar-on\");\n      } else {\n         sidebar.classList.remove(\"sidebar-on\");\n      }\n   });\n   useEffect(() => {\n      let mql = window.matchMedia(\"(min-width: 1050px)\");\n      const sidebar = document.querySelector(\"aside\");\n\n      if (mql.matches == true) {\n         sidebar.classList.add(\"sidebar-on\");\n      }\n   }, []);\n   return (\n      <aside className=\"sidebar-off\">\n         {/* <--- Filter section of the sidebar ---> */}\n         <div className=\"filter\">\n            <div className=\"heading\">\n               <FaFilter />\n               <h1>Filter</h1>\n            </div>\n            <div className=\"filter-items\">\n               <Link className=\"popular\" to={\"/popular\"}>\n                  <h2>Popular</h2>\n               </Link>\n               <Link className=\"top-rated\" to={\"/top-rated\"}>\n                  <h2>Top Rated</h2>\n               </Link>\n               <Link className=\"upcoming\" to={\"/upcoming\"}>\n                  <h2>Upcoming</h2>\n               </Link>\n               <Link className=\"now-playing\" to={\"/now-playing\"}>\n                  <h2>Now Playing</h2>\n               </Link>\n            </div>\n         </div>\n         {/* <--- Latest ---> */}\n         <div className=\"latest\">\n            <div className=\"heading\">\n               <FaRegPlusSquare size=\"1.2em\" />\n               <h1> Recently Added </h1>\n            </div>\n            <div className=\"latest-items\">\n               <ul>{latest !== null && <li id={latest.id}>{latest.title}</li>}</ul>\n            </div>\n         </div>\n      </aside>\n   );\n};\n\nexport default Sidebar;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/popular/PopularMovie.js",["110","111"],"/Users/vince/Desktop/GitHub/movie-app/src/globals/utilities.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/shortenPars.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/globals/formatDate.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/Single.js",["112","113","114"],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRated.js",["115","116"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport TopRatedMovie from \"./TopRatedMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst TopRated = () => {\n   //! <-------- useState Variable -------->\n   const [topRatedMovies, setTopRatedMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchTopRatedMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setTopRatedMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchTopRatedMovies();\n   }, []);\n   if (topRatedMovies !== null) {\n      console.log(topRatedMovies);\n   }\n   // <----- Current Page ------>\n   const [isTopRated, setisTopRated] = useState(true);\n   if (isTopRated == true && topRatedMovies !== null) {\n      const selector = document.querySelector(\"a.top-rated h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {topRatedMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${topRatedMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${topRatedMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {topRatedMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(topRatedMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${topRatedMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Top Rated Titles</h2>\n                  <main className=\"render-titles\">\n                     {topRatedMovies !== null &&\n                        topRatedMovies.map((movie) => {\n                           return (\n                              <TopRatedMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default TopRated;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/top-rated/TopRatedMovie.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/Upcoming.js",["117","118"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport UpcomingMovie from \"./UpcomingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Upcoming = () => {\n   //! <-------- useState Variable -------->\n   const [upcomingMovies, setUpcomingMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchUpcomingMovies = async () => {\n      const data_upcoming = await fetch(\n         `https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_upcoming = await data_upcoming.json();\n      setUpcomingMovies(response_upcoming.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchUpcomingMovies();\n   }, []);\n   if (upcomingMovies !== null) {\n      console.log(upcomingMovies);\n   }\n   // <----- Current Page ------>\n   const [isUpcoming, setisUpcoming] = useState(true);\n   if (isUpcoming == true && upcomingMovies !== null) {\n      const selector = document.querySelector(\"a.upcoming h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {upcomingMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${upcomingMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${upcomingMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {upcomingMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(upcomingMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${upcomingMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Upcoming Titles</h2>\n                  <main className=\"render-titles\">\n                     {upcomingMovies !== null &&\n                        upcomingMovies.map((movie) => {\n                           return (\n                              <UpcomingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Upcoming;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/upcoming/UpcomingMovie.js",[],"/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlaying.js",["119","120"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport NowPlayingMovie from \"./NowPlayingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst NowPlaying = () => {\n   //! <-------- useState Variable -------->\n   const [nowPlaying, setNowPlaying] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchNowPlaying = async () => {\n      const data_now_playing = await fetch(\n         `https://api.themoviedb.org/3/movie/now_playing?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_now_playing = await data_now_playing.json();\n      setNowPlaying(response_now_playing.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchNowPlaying();\n   }, []);\n   // if (nowPlaying !== null) {\n   //    console.log(nowPlaying);\n   // }\n   // <----- Current Page ------>\n   const [isNowPlaying, setIsNowPlaying] = useState(true);\n   if (isNowPlaying == true && nowPlaying !== null) {\n      const selector = document.querySelector(\"a.now-playing h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {nowPlaying !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${nowPlaying[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${nowPlaying[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {nowPlaying[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(nowPlaying[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${nowPlaying[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Now Playing</h2>\n                  <main className=\"render-titles\">\n                     {nowPlaying !== null &&\n                        nowPlaying.map((movie) => {\n                           return (\n                              <NowPlayingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default NowPlaying;\n","/Users/vince/Desktop/GitHub/movie-app/src/component/dynamic/now-playing/NowPlayingMovie.js",["121","122"],"/Users/vince/Desktop/GitHub/movie-app/src/globals/favourites.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":16},{"ruleId":"128","severity":1,"message":"132","line":32,"column":22,"nodeType":"130","messageId":"131","endLine":32,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":33,"column":18,"nodeType":"135","messageId":"136","endLine":33,"endColumn":20},{"ruleId":"128","severity":1,"message":"137","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":19},{"ruleId":"128","severity":1,"message":"138","line":2,"column":21,"nodeType":"130","messageId":"131","endLine":2,"endColumn":27},{"ruleId":"128","severity":1,"message":"139","line":2,"column":29,"nodeType":"130","messageId":"131","endLine":2,"endColumn":36},{"ruleId":"128","severity":1,"message":"140","line":2,"column":38,"nodeType":"130","messageId":"131","endLine":2,"endColumn":44},{"ruleId":"128","severity":1,"message":"141","line":4,"column":19,"nodeType":"130","messageId":"131","endLine":4,"endColumn":30},{"ruleId":"142","severity":1,"message":"143","line":21,"column":7,"nodeType":"144","endLine":21,"endColumn":9,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"134","line":29,"column":23,"nodeType":"135","messageId":"136","endLine":29,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":39,"column":23,"nodeType":"135","messageId":"136","endLine":39,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":12,"column":17,"nodeType":"135","messageId":"136","endLine":12,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":43,"column":35,"nodeType":"135","messageId":"136","endLine":43,"endColumn":37},{"ruleId":"128","severity":1,"message":"139","line":4,"column":46,"nodeType":"130","messageId":"131","endLine":4,"endColumn":53},{"ruleId":"142","severity":1,"message":"146","line":45,"column":7,"nodeType":"144","endLine":45,"endColumn":9,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"134","line":82,"column":51,"nodeType":"135","messageId":"136","endLine":82,"endColumn":53},{"ruleId":"128","severity":1,"message":"148","line":31,"column":23,"nodeType":"130","messageId":"131","endLine":31,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":32,"column":19,"nodeType":"135","messageId":"136","endLine":32,"endColumn":21},{"ruleId":"128","severity":1,"message":"149","line":31,"column":23,"nodeType":"130","messageId":"131","endLine":31,"endColumn":36},{"ruleId":"133","severity":1,"message":"134","line":32,"column":19,"nodeType":"135","messageId":"136","endLine":32,"endColumn":21},{"ruleId":"128","severity":1,"message":"150","line":31,"column":25,"nodeType":"130","messageId":"131","endLine":31,"endColumn":40},{"ruleId":"133","severity":1,"message":"134","line":32,"column":21,"nodeType":"135","messageId":"136","endLine":32,"endColumn":23},{"ruleId":"128","severity":1,"message":"151","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"152","line":6,"column":20,"nodeType":"130","messageId":"131","endLine":6,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":5,"column":26,"nodeType":"135","messageId":"136","endLine":5,"endColumn":28},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'bg_url' is assigned a value but never used.","Identifier","unusedVar","'setIsPopular' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaFireAlt' is defined but never used.","'FaStar' is defined but never used.","'FaClock' is defined but never used.","'FaPlay' is defined but never used.","'poster_base' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchLatest' and 'latest'. Either include them or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has missing dependencies: 'fetchCast' and 'fetchSingleItem'. Either include them or remove the dependency array.",["156"],"'setisTopRated' is assigned a value but never used.","'setisUpcoming' is assigned a value but never used.","'setIsNowPlaying' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [fetchLatest, latest]",{"range":"161","text":"162"},"Update the dependencies array to be: [fetchCast, fetchSingleItem]",{"range":"163","text":"164"},[773,775],"[fetchLatest, latest]",[1857,1859],"[fetchCast, fetchSingleItem]"]