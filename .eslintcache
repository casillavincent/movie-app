[{"/Users/vince/Desktop/GitHub/butter-db/src/index.js":"1","/Users/vince/Desktop/GitHub/butter-db/src/App.js":"2","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/Favourites.js":"3","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/Single.js":"4","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/About.js":"5","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/upcoming/Upcoming.js":"6","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/Landing.js":"7","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/top-rated/TopRated.js":"8","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/now-playing/NowPlaying.js":"9","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/popular/Popular.js":"10","/Users/vince/Desktop/GitHub/butter-db/src/component/static/Credits.js":"11","/Users/vince/Desktop/GitHub/butter-db/src/component/static/NoPage.js":"12","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/popular/PopularMovie.js":"13","/Users/vince/Desktop/GitHub/butter-db/src/component/static/Sidebar.js":"14","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/now-playing/NowPlayingMovie.js":"15","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/upcoming/UpcomingMovie.js":"16","/Users/vince/Desktop/GitHub/butter-db/src/component/static/Footer.js":"17","/Users/vince/Desktop/GitHub/butter-db/src/component/static/Header.js":"18","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/top-rated/TopRatedMovie.js":"19","/Users/vince/Desktop/GitHub/butter-db/src/globals/formatDate.js":"20","/Users/vince/Desktop/GitHub/butter-db/src/globals/likes.js":"21","/Users/vince/Desktop/GitHub/butter-db/src/globals/utilities.js":"22","/Users/vince/Desktop/GitHub/butter-db/src/globals/variables.js":"23","/Users/vince/Desktop/GitHub/butter-db/src/globals/heart.js":"24","/Users/vince/Desktop/GitHub/butter-db/src/globals/plus.js":"25","/Users/vince/Desktop/GitHub/butter-db/src/globals/watchlist.js":"26","/Users/vince/Desktop/GitHub/butter-db/src/globals/shortenPars.js":"27"},{"size":230,"mtime":1611688789000,"results":"28","hashOfConfig":"29"},{"size":1658,"mtime":1611727240301,"results":"30","hashOfConfig":"29"},{"size":7128,"mtime":1611731786794,"results":"31","hashOfConfig":"29"},{"size":11672,"mtime":1611776016967,"results":"32","hashOfConfig":"29"},{"size":2584,"mtime":1611688789000,"results":"33","hashOfConfig":"29"},{"size":3259,"mtime":1611688789000,"results":"34","hashOfConfig":"29"},{"size":2303,"mtime":1611688789000,"results":"35","hashOfConfig":"29"},{"size":3259,"mtime":1611688789000,"results":"36","hashOfConfig":"29"},{"size":3249,"mtime":1611769718912,"results":"37","hashOfConfig":"29"},{"size":3286,"mtime":1611688789000,"results":"38","hashOfConfig":"29"},{"size":1110,"mtime":1611721917124,"results":"39","hashOfConfig":"29"},{"size":449,"mtime":1611723089675,"results":"40","hashOfConfig":"29"},{"size":4129,"mtime":1611775726488,"results":"41","hashOfConfig":"29"},{"size":9439,"mtime":1611721906147,"results":"42","hashOfConfig":"29"},{"size":4193,"mtime":1611775835623,"results":"43","hashOfConfig":"29"},{"size":4287,"mtime":1611775756891,"results":"44","hashOfConfig":"29"},{"size":1879,"mtime":1611721909268,"results":"45","hashOfConfig":"29"},{"size":2029,"mtime":1611721907596,"results":"46","hashOfConfig":"29"},{"size":4287,"mtime":1611775744335,"results":"47","hashOfConfig":"29"},{"size":219,"mtime":1611721887477,"results":"48","hashOfConfig":"29"},{"size":1440,"mtime":1611721891736,"results":"49","hashOfConfig":"29"},{"size":538,"mtime":1611721899939,"results":"50","hashOfConfig":"29"},{"size":210,"mtime":1611721901266,"results":"51","hashOfConfig":"29"},{"size":376,"mtime":1611721889558,"results":"52","hashOfConfig":"29"},{"size":399,"mtime":1611721896622,"results":"53","hashOfConfig":"29"},{"size":1529,"mtime":1611721902779,"results":"54","hashOfConfig":"29"},{"size":152,"mtime":1611721898173,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1fvky8x",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vince/Desktop/GitHub/butter-db/src/index.js",[],["125","126"],"/Users/vince/Desktop/GitHub/butter-db/src/App.js",[],"/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/Favourites.js",["127","128","129","130"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../globals/formatDate\";\nimport { percentNumber, ratingColor } from \"../../globals/utilities\";\nimport { removeWatchlist } from \"../../globals/watchlist\";\nimport { removeLikes } from \"../../globals/likes\";\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\nimport Sidebar from \"../static/Sidebar\";\nimport { FaHeart, FaPlus } from \"react-icons/fa\";\n\nconst Favourites = () => {\n   const [liked, setLiked] = useState(null);\n   const [watchlist, setWatchlist] = useState(null);\n   //* Likes\n   const fetchLocalStorage = () => {\n      //Likes\n      const data_liked = localStorage.getItem(\"Likes\");\n      const response_liked = JSON.parse(data_liked);\n\n      //Watchlist\n      const data_watchlist = localStorage.getItem(\"Watchlist\");\n      const response_watchlist = JSON.parse(data_watchlist);\n\n      //Set State\n      setLiked(response_liked);\n      setWatchlist(response_watchlist);\n   };\n\n   useEffect(() => {\n      fetchLocalStorage();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"favourites-container\">\n               {/* Likes */}\n               <div className=\"likes-container\">\n                  <h2 className=\"title-likes\">\n                     {\" \"}\n                     <span>\n                        <FaHeart size=\"0.75em\" color=\"red\" />\n                     </span>\n                     My Likes\n                  </h2>\n                  <div className=\"render-likes\">\n                     {/* Map all liked items from local storage */}\n                     {liked == undefined || liked.length == 0 ? (\n                        <h2 className=\"no-likes\">\n                           Nothing to see here! Go back and add movies you like.\n                        </h2>\n                     ) : (\n                        liked.map((movie) => {\n                           return (\n                              <div className={`likes-item likes-item-${movie.movieId}`}>\n                                 <img\n                                    src={`https://www.themoviedb.org/t/p/original${movie.moviePoster}`}\n                                    alt={`${movie.movieId}`}\n                                    width=\"150\"\n                                 />\n                                 <div className=\"info\">\n                                    <p className=\"title\">\n                                       {movie.movieTitle}{\" \"}\n                                       <span\n                                          style={{\n                                             backgroundColor: ratingColor(movie.movieRating),\n                                          }}\n                                       >\n                                          {percentNumber(movie.movieRating)}\n                                       </span>\n                                    </p>\n                                    <p className=\"release\">{formatDate(movie.movieRelease)}</p>\n                                    <div className=\"action-btns\">\n                                       <button\n                                          className=\"remove\"\n                                          onClick={() => {\n                                             removeLikes(movie.movieId);\n                                             fetchLocalStorage();\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                       <button className=\"more-info\">\n                                          <Link to={`/info/${movie.movieId}`}>More Info</Link>\n                                       </button>\n                                    </div>\n                                 </div>\n                              </div>\n                           );\n                        })\n                     )}\n                  </div>\n               </div>\n\n               {/* Watchlist */}\n               <div className=\"watchlist-container\">\n                  <h2 className=\"title-watchlist\">\n                     <span>\n                        <FaPlus size=\"0.75em\" />\n                     </span>\n                     My Watchlist\n                  </h2>\n                  <div className=\"render-watchlist\">\n                     {/* Watchlist Items */}\n                     {watchlist == undefined || watchlist.length == 0 ? (\n                        <h2 className=\"no-watchlist\">\n                           Nothing to see here! Add movies you want to see.\n                        </h2>\n                     ) : (\n                        watchlist.map((movie) => {\n                           return (\n                              <div className=\"watchlist-item\">\n                                 <img\n                                    src={`https://www.themoviedb.org/t/p/original${movie.moviePoster}`}\n                                    alt={`${movie.movieTitle}`}\n                                    width=\"150\"\n                                 />\n                                 <div className=\"info\">\n                                    <p className=\"title\">\n                                       {movie.movieTitle}{\" \"}\n                                       <span\n                                          style={{\n                                             backgroundColor: `${ratingColor(movie.movieRating)}`,\n                                          }}\n                                       >\n                                          {percentNumber(movie.movieRating)}\n                                       </span>\n                                    </p>\n                                    <p className=\"release\">{formatDate(movie.movieRelease)}</p>\n                                    <div className=\"action-btns\">\n                                       <button\n                                          className=\"remove\"\n                                          onClick={() => {\n                                             removeWatchlist(movie.movieId);\n                                             fetchLocalStorage();\n                                          }}\n                                       >\n                                          Remove\n                                       </button>\n                                       <button className=\"more-info\">\n                                          <Link to={`/info/${movie.movieId}`}>More Info</Link>\n                                       </button>\n                                    </div>\n                                 </div>\n                              </div>\n                           );\n                        })\n                     )}\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Favourites;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/Single.js",["131","132","133","134","135","136"],"/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/About.js",["137"],"import React from \"react\";\nimport Sidebar from \"../static/Sidebar\";\nimport Footer from \"../static/Footer\";\nimport Header from \"../static/Header\";\nimport { useState, useEffect } from \"react\";\nimport { FaReact } from \"react-icons/fa\";\n\nconst About = () => {\n   const [isAbout, setIsAbout] = useState(true);\n   useEffect(() => {\n      if (isAbout) {\n         const footerSelector = document.querySelector(\"footer\");\n         footerSelector.style.cssText = \"position: fixed; bottom: 0px; left: 0px;\";\n      }\n   });\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"about-container\">\n               {/* Application Description */}\n               <div className=\"app-info\">\n                  <h2 className=\"title\">About Butter.DB</h2>\n                  <p className=\"description\">\n                     {\" \"}\n                     Butter.DB allows users to view relevant information regarding upcoming, top\n                     rated, popular or newly released movies. In addition, this app is capable of\n                     letting users bookmark movies via like or add movies to a watchlist.\n                  </p>\n               </div>\n\n               {/* Movie DB Api Description */}\n               <div className=\"tmdb-info\">\n                  <img\n                     src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg\"\n                     alt=\"TMDB Logo\"\n                     width=\"150\"\n                  />\n                  <p className=\"description\">\n                     This product uses the TMDb API but is not endorsed or certified by TMDb.\n                  </p>\n               </div>\n               {/* Powered By React */}\n               <div className=\"react-info\">\n                  <h2 className=\"title\">\n                     {\" \"}\n                     Powered By{\" \"}\n                     <FaReact\n                        color=\"#61DAFB\"\n                        size=\"0.7em\"\n                        style={{ marginRight: \"4px\", marginLeft: \"7px\" }}\n                     />\n                     React.JS\n                  </h2>\n                  <p className=\"description\">\n                     Butter.DB is a small project that combines HTML5, SCSS, Javascript, React.JS to\n                     create a simple full stack application.\n                  </p>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default About;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/upcoming/Upcoming.js",["138","139"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport UpcomingMovie from \"./UpcomingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Upcoming = () => {\n   //! <-------- useState Variable -------->\n   const [upcomingMovies, setUpcomingMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchUpcomingMovies = async () => {\n      const data_upcoming = await fetch(\n         `https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_upcoming = await data_upcoming.json();\n      setUpcomingMovies(response_upcoming.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchUpcomingMovies();\n   }, []);\n   // <----- Current Page ------>\n   const [isUpcoming, setisUpcoming] = useState(true);\n   if (isUpcoming == true && upcomingMovies !== null) {\n      const selector = document.querySelector(\"a.upcoming h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {upcomingMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${upcomingMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${upcomingMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {upcomingMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(upcomingMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${upcomingMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Upcoming Titles</h2>\n                  <main className=\"render-titles\">\n                     {upcomingMovies !== null &&\n                        upcomingMovies.map((movie) => {\n                           return (\n                              <UpcomingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Upcoming;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/Landing.js",["140"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaFireAlt, FaStar, FaClock, FaPlay, FaPlus, FaUserAstronaut } from \"react-icons/fa\";\n\nconst Landing = () => {\n   const bg_url = \"https://www.themoviedb.org/t/p/original/d2UxKyaJ5GgzuHaSsWinFfv3g6L.jpg\";\n\n   return (\n      <div className=\"landing\">\n         <div className=\"landing-wrapper\">\n            <div className=\"content\">\n               <h1>Butter.DB</h1>\n               <p>Get updates on the movies you want to see!</p>\n               <div className=\"hotlinks\">\n                  <div className=\"popular\">\n                     {/* Popular */}\n                     <Link to={\"/popular\"}>\n                        <FaFireAlt size=\"1.75em\" />\n                        <p>Popular</p>\n                     </Link>\n                  </div>\n                  <div className=\"top-rated\">\n                     {/* Top Rated */}\n                     <Link to={\"/top-rated\"}>\n                        <FaStar size=\"1.75em\" />\n                        <p>Top Rated</p>\n                     </Link>\n                  </div>\n                  <div className=\"upcoming\">\n                     {/* Upcoming */}\n                     <Link to={\"/upcoming\"}>\n                        <FaClock size=\"1.75em\" />\n                        <p>Upcoming</p>\n                     </Link>\n                  </div>\n                  <div className=\"now-playing\">\n                     {/* Now Playing */}\n                     <Link to={\"/now-playing\"}>\n                        <FaPlay size=\"1.75em\" />\n                        <p>Now Playing</p>\n                     </Link>\n                  </div>\n                  <div className=\"favourites\">\n                     {/* Favourites */}\n                     <Link to={\"/favourites\"}>\n                        <FaPlus size=\"1.75em\" />\n                        <p>Favourites</p>\n                     </Link>\n                  </div>\n                  <div className=\"about\">\n                     {/* Favourites */}\n                     <Link to={\"/about\"}>\n                        <FaUserAstronaut size=\"1.75em\" />\n                        <p>About</p>\n                     </Link>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Landing;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/top-rated/TopRated.js",["141","142"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport TopRatedMovie from \"./TopRatedMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst TopRated = () => {\n   //! <-------- useState Variable -------->\n   const [topRatedMovies, setTopRatedMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchTopRatedMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setTopRatedMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchTopRatedMovies();\n   }, []);\n\n   // <----- Current Page ------>\n   const [isTopRated, setisTopRated] = useState(true);\n   if (isTopRated == true && topRatedMovies !== null) {\n      const selector = document.querySelector(\"a.top-rated h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {topRatedMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${topRatedMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${topRatedMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {topRatedMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(topRatedMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${topRatedMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Top Rated Titles</h2>\n                  <main className=\"render-titles\">\n                     {topRatedMovies !== null &&\n                        topRatedMovies.map((movie) => {\n                           return (\n                              <TopRatedMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default TopRated;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/now-playing/NowPlaying.js",["143","144"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport NowPlayingMovie from \"./NowPlayingMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst NowPlaying = () => {\n   //! <-------- useState Variable -------->\n   const [nowPlaying, setNowPlaying] = useState(null);\n   //! <-------------- Fetch data --------->\n   const fetchNowPlaying = async () => {\n      const data_now_playing = await fetch(\n         `https://api.themoviedb.org/3/movie/now_playing?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_now_playing = await data_now_playing.json();\n      setNowPlaying(response_now_playing.results);\n   };\n\n   //! <----------- useEffect -------------->\n   useEffect(() => {\n      fetchNowPlaying();\n   }, []);\n   // <----- Current Page ------>\n   const [isNowPlaying, setIsNowPlaying] = useState(true);\n   if (isNowPlaying == true && nowPlaying !== null) {\n      const selector = document.querySelector(\"a.now-playing h2\");\n      selector.classList.add(\"page-id\");\n   }\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {nowPlaying !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${nowPlaying[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${nowPlaying[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {nowPlaying[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(nowPlaying[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${nowPlaying[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Now Playing</h2>\n                  <main className=\"render-titles\">\n                     {nowPlaying !== null &&\n                        nowPlaying.map((movie) => {\n                           return (\n                              <NowPlayingMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default NowPlaying;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/popular/Popular.js",["145","146"],"import React from \"react\";\nimport Sidebar from \"../../static/Sidebar\";\nimport Header from \"../../static/Header\";\nimport Footer from \"../../static/Footer\";\nimport { Link } from \"react-router-dom\";\nimport PopularMovie from \"./PopularMovie\";\nimport { api_key } from \"../../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { formatDate } from \"../../../globals/formatDate\";\n\nconst Popular = () => {\n   //! <-------- useState Variable -------->\n   const [popularMovies, setPopularMovies] = useState(null);\n   //! <-------- Fetch data -------->\n   const fetchPopularMovies = async () => {\n      const data_popular = await fetch(\n         `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`\n      );\n      const response_popular = await data_popular.json();\n      setPopularMovies(response_popular.results);\n   };\n\n   //! <-------- useEffect -------->\n   useEffect(() => {\n      fetchPopularMovies();\n   }, []);\n\n   // <----- Current Page ------>\n   const [isPopular, setIsPopular] = useState(true);\n   if (isPopular == true && popularMovies !== null) {\n      const selector = document.querySelector(\"a.popular h2\");\n      selector.classList.add(\"page-id\");\n   }\n   //* <---------- Render Component ----------------->\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <Sidebar />\n            <div className=\"render\">\n               {/* Featured */}\n               {popularMovies !== null && (\n                  <figure\n                     className=\"featured\"\n                     id={`${popularMovies[0].id}`}\n                     style={{\n                        backgroundImage: `url(\"https://www.themoviedb.org/t/p/original${popularMovies[0].backdrop_path}\")`,\n                     }}\n                  >\n                     <figcaption>\n                        <h2> {popularMovies[0].title} </h2>\n                        <ul>\n                           <li>{formatDate(popularMovies[0].release_date)}</li>\n                        </ul>\n                        <Link to={`/info/${popularMovies[0].id}`}>\n                           <button>More Info</button>\n                        </Link>\n                     </figcaption>\n                  </figure>\n               )}\n               {/*  Titles */}\n               <div className=\"titles\">\n                  <h2>Popular Titles</h2>\n                  <main className=\"render-titles\">\n                     {popularMovies !== null &&\n                        popularMovies.map((movie) => {\n                           return (\n                              <PopularMovie\n                                 title={movie.title}\n                                 score={movie.vote_average}\n                                 id={movie.id}\n                                 poster={movie.poster_path}\n                                 backdrop={movie.backdrop_path}\n                                 release={movie.release_date}\n                                 overview={movie.overview}\n                              />\n                           );\n                        })}\n                  </main>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Popular;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/static/Credits.js",["147","148","149"],"import React from \"react\";\nimport Header from \"../static/Header\";\nimport Footer from \"../static/Footer\";\n\nconst Credits = () => {\n   window.scrollTo(0, 0);\n   return (\n      <React.Fragment>\n         <Header />\n         <div className=\"wrapper\">\n            <div className=\"credits-container\">\n               <h1>Credits</h1>\n               {/* Logo */}\n               <div>\n                  <h2>Butter.DB Logo</h2>\n                  <a href=\"https://www.freepik.com\" title=\"Freepik\" target=\"_blank\">\n                     Freepik\n                  </a>{\" \"}\n                  from{\" \"}\n                  <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target=\"_blank\">\n                     www.flaticon.com\n                  </a>\n               </div>\n\n               {/* Animations */}\n               <div>\n                  <h2>Animasta</h2>\n                  <a href=\"https://animista.net/\" target=\"_blank\">\n                     View Animasta\n                  </a>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </React.Fragment>\n   );\n};\n\nexport default Credits;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/static/NoPage.js",[],"/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/popular/PopularMovie.js",["150","151","152","153","154","155","156","157"],"/Users/vince/Desktop/GitHub/butter-db/src/component/static/Sidebar.js",["158","159"],"import React from \"react\";\nimport { FaStar, FaFilter, FaRegPlusSquare } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { api_key, poster_base } from \"../../globals/variables\";\nimport { useState, useEffect } from \"react\";\nimport { percentNumber, ratingColor } from \"../../globals/utilities\";\n\nconst Sidebar = () => {\n   //? <----- fetch data ----->\n   const [latest, setLatest] = useState(null);\n   const [trending, setTrending] = useState(null);\n   const latest_url = `https://api.themoviedb.org/3/movie/latest?api_key=${api_key}&language=en-US`;\n\n   const fetchLatest = async () => {\n      const data_latest = await fetch(latest_url);\n      const data_response = await data_latest.json();\n      setLatest(data_response);\n   };\n\n   const fetchTrending = async () => {\n      const data_trending = await fetch(\n         `https://api.themoviedb.org/3/trending/movie/day?api_key=${api_key}`\n      );\n      const response_trending = await data_trending.json();\n      setTrending(response_trending.results);\n   };\n   useEffect(() => {\n      fetchLatest();\n      fetchTrending();\n   }, []);\n\n   //? <---- utility for toggling sidebar on larger screens ---->\n   const isDesktop = (e) => {\n      const sidebar = document.querySelector(\"aside\");\n      const footerSelector = document.querySelector(\"footer\");\n\n      if (e.matches) {\n         sidebar.classList.add(\"sidebar-on\");\n         if (footerSelector.classList.contains(\"footer-off\")) {\n            footerSelector.classList.remove(\"footer-off\");\n         }\n      } else {\n         if (sidebar.classList.contains(\"sidebar-on\")) {\n            sidebar.classList.remove(\"sidebar-on\");\n         }\n      }\n   };\n   useEffect(() => {\n      let mql = window.matchMedia(\"(min-width: 1050px)\");\n      const sidebar = document.querySelector(\"aside\");\n\n      mql.addListener(isDesktop);\n\n      if (mql.matches === true) {\n         sidebar.classList.add(\"sidebar-on\");\n      }\n\n      //? Remove event listener if the sidebar component doesnt get mounted\n      return () => mql.removeListener(isDesktop);\n   }, []);\n\n   return (\n      <aside className=\"sidebar-off\">\n         {/* <--- Filter section of the sidebar ---> */}\n         <div className=\"filter\">\n            <div className=\"heading\">\n               <FaFilter />\n               <h1>Filter</h1>\n            </div>\n            <div className=\"filter-items\">\n               <Link className=\"popular\" to={\"/popular\"}>\n                  <h2>Popular</h2>\n               </Link>\n               <Link className=\"top-rated\" to={\"/top-rated\"}>\n                  <h2>Top Rated</h2>\n               </Link>\n               <Link className=\"upcoming\" to={\"/upcoming\"}>\n                  <h2>Upcoming</h2>\n               </Link>\n               <Link className=\"now-playing\" to={\"/now-playing\"}>\n                  <h2>Now Playing</h2>\n               </Link>\n            </div>\n         </div>\n\n         {/* <--- Latest ---> */}\n         <div className=\"latest\">\n            <div className=\"heading\">\n               <FaRegPlusSquare size=\"1.2em\" />\n               <h1> Recently Added </h1>\n            </div>\n            <div className=\"latest-items\">\n               <ul>{latest !== null && <li id={latest.id}>{latest.title}</li>}</ul>\n            </div>\n         </div>\n\n         {/* <---- Trending ----> */}\n         <div className=\"trending\">\n            <div className=\"heading\">\n               <FaStar size=\"1em\" />\n               <h1>Trending Titles</h1>\n            </div>\n            <div className=\"trending-items\">\n               {trending !== null && (\n                  <ul>\n                     {/* First Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[0].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[0].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[0].vote_average)}\n                           </span>\n                           {trending[0].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Second Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[1].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[1].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[1].vote_average)}\n                           </span>\n                           {trending[1].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Third Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[2].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[2].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[2].vote_average)}\n                           </span>\n                           {trending[2].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* FOurth Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[3].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[3].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[3].vote_average)}\n                           </span>\n                           {trending[3].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Fifth item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[4].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[4].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[4].vote_average)}\n                           </span>{\" \"}\n                           {trending[4].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Sixth Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[5].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[5].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[5].vote_average)}\n                           </span>\n                           {trending[5].title}{\" \"}\n                        </Link>\n                     </li>\n\n                     {/* Seventh Item */}\n                     <li\n                        className=\"trending-item\"\n                        onClick={() => {\n                           window.location.reload();\n                        }}\n                     >\n                        <Link to={`/info/${trending[6].id}`}>\n                           <span\n                              style={{\n                                 backgroundColor: `${ratingColor(trending[6].vote_average)}`,\n                              }}\n                              className=\"rating\"\n                           >\n                              {percentNumber(trending[6].vote_average)}\n                           </span>\n                           {trending[6].title}{\" \"}\n                        </Link>\n                     </li>\n                  </ul>\n               )}\n            </div>\n         </div>\n      </aside>\n   );\n};\n\nexport default Sidebar;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/now-playing/NowPlayingMovie.js",["160","161","162","163","164","165","166","167","168"],"/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/upcoming/UpcomingMovie.js",["169","170","171","172","173","174","175","176","177"],"/Users/vince/Desktop/GitHub/butter-db/src/component/static/Footer.js",["178"],"import React from \"react\";\nimport { FaReact, FaGithub } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport { AiFillLinkedin } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n   return (\n      <footer>\n         <div className=\"column column01\">\n            <p className=\"footer-large-text\">Powered By:</p>\n            <div className=\"react-logo\">\n               <FaReact size=\"1em\" color=\"#61dafb\" />\n               <p className=\"footer-normal-text\"> React </p>\n            </div>\n         </div>\n\n         <div className=\"column column02\">\n            <p className=\"footer-large-text\"> &copy; Vincent Casilla 2020 </p>\n            <p className=\"footer-normal-text\"> For Education Purposes Only </p>\n            <p className=\"footer-normal-text\">\n               {\" \"}\n               <Link to={\"/credits\"} style={{ color: \"#7893E4\", textDecoration: \"none\" }}>\n                  Credits\n               </Link>{\" \"}\n            </p>\n         </div>\n\n         <div className=\"column column03\">\n            <p className=\"footer-large-text\"> Connect With Me</p>\n            <div className=\"social-menu\">\n               <div className=\"social-menu-github\">\n                  <a href=\"https://github.com/casillavincent\" target=\"_blank\">\n                     <FaGithub size=\"1.5em\" color=\"white\" />\n                  </a>\n               </div>\n               <div className=\"social-menu-email\">\n                  <a href=\"mailto:vcasilla1@my.bcit.ca?subject=Hello Vincent!\">\n                     <MdEmail size=\"1.5em\" color=\"white\" />\n                  </a>\n               </div>\n               <div className=\"social-menu-linkedin\">\n                  {\" \"}\n                  <AiFillLinkedin size=\"1.5em\" color=\"white\" />\n               </div>\n            </div>\n         </div>\n      </footer>\n   );\n};\n\nexport default Footer;\n","/Users/vince/Desktop/GitHub/butter-db/src/component/static/Header.js",[],"/Users/vince/Desktop/GitHub/butter-db/src/component/dynamic/top-rated/TopRatedMovie.js",["179","180","181","182","183","184","185","186","187"],"/Users/vince/Desktop/GitHub/butter-db/src/globals/formatDate.js",[],"/Users/vince/Desktop/GitHub/butter-db/src/globals/likes.js",[],"/Users/vince/Desktop/GitHub/butter-db/src/globals/utilities.js",["188"],"//Floor given integer (vote count and popularity)\nexport const floorNumber = (int) => {\n   return Math.floor(int);\n};\n\n//Change rating into percentage\nexport const percentNumber = (int) => {\n   return `${Math.floor(int * 10)}%`;\n};\n\n//Change color of rating\nexport const ratingColor = (rating) => {\n   let ratingSelector = document.querySelector(\".thumbnail .rating-btn .rating\");\n   if (rating > 7) {\n      return \"#4CB396\";\n   } else if (rating < 7 && rating > 5.5) {\n      return \"#7995E6\";\n   } else {\n      return \"#FE3736\";\n   }\n};\n","/Users/vince/Desktop/GitHub/butter-db/src/globals/variables.js",[],"/Users/vince/Desktop/GitHub/butter-db/src/globals/heart.js",["189"],"export const toggleHeart = (id) => {\n   const data_likes = localStorage.getItem(\"Likes\");\n   const response_likes = JSON.parse(data_likes);\n\n   if (localStorage.Likes !== undefined) {\n      const indexOfQuery = response_likes.findIndex((movie) => id == movie.movieId);\n      if (indexOfQuery >= 0) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n};\n","/Users/vince/Desktop/GitHub/butter-db/src/globals/plus.js",["190"],"export const togglePlus = (id) => {\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   if (localStorage.Watchlist !== undefined) {\n      const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n      if (indexOfQuery >= 0) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n};\n","/Users/vince/Desktop/GitHub/butter-db/src/globals/watchlist.js",["191","192","193"],"//* <-------- Add to Watchlist -------->\nexport const addWatchlist = (title, id, rating, poster, release) => {\n   const movieToBeAdded = {\n      movieTitle: title,\n      movieId: id,\n      movieRating: rating,\n      moviePoster: poster,\n      movieRelease: release,\n   };\n   //If Watchlist doesnt exist create it in local storage\n   if (localStorage.Watchlist == undefined) {\n      localStorage.setItem(\"Watchlist\", JSON.stringify([]));\n   }\n\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n   if (indexOfQuery < 0) {\n      response_watchlist.push(movieToBeAdded);\n   }\n\n   localStorage.setItem(\"Watchlist\", JSON.stringify(response_watchlist));\n};\n\n//! <------- Remove Watchlist ----------->\nexport const removeWatchlist = (id) => {\n   const data_watchlist = localStorage.getItem(\"Watchlist\");\n   const response_watchlist = JSON.parse(data_watchlist);\n\n   //* Check if the id of the movie exists in the local storage array\n   const indexOfQuery = response_watchlist.findIndex((movie) => id == movie.movieId);\n\n   //* Remove the index of the id from local storage\n   //* Check if the indexQuery exists (not -1)\n   if (indexOfQuery > -1) {\n      response_watchlist.splice(indexOfQuery, 1);\n   }\n\n   //* Store to local storage\n   localStorage.setItem(\"Watchlist\", JSON.stringify(response_watchlist));\n};\n","/Users/vince/Desktop/GitHub/butter-db/src/globals/shortenPars.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":52,"column":29,"nodeType":"200","messageId":"201","endLine":52,"endColumn":31},{"ruleId":"198","severity":1,"message":"199","line":52,"column":58,"nodeType":"200","messageId":"201","endLine":52,"endColumn":60},{"ruleId":"198","severity":1,"message":"199","line":109,"column":33,"nodeType":"200","messageId":"201","endLine":109,"endColumn":35},{"ruleId":"198","severity":1,"message":"199","line":109,"column":66,"nodeType":"200","messageId":"201","endLine":109,"endColumn":68},{"ruleId":"202","severity":1,"message":"203","line":4,"column":46,"nodeType":"204","messageId":"205","endLine":4,"endColumn":53},{"ruleId":"206","severity":1,"message":"207","line":67,"column":7,"nodeType":"208","endLine":67,"endColumn":9,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"199","line":152,"column":70,"nodeType":"200","messageId":"201","endLine":152,"endColumn":72},{"ruleId":"198","severity":1,"message":"199","line":163,"column":55,"nodeType":"200","messageId":"201","endLine":163,"endColumn":57},{"ruleId":"198","severity":1,"message":"199","line":174,"column":69,"nodeType":"200","messageId":"201","endLine":174,"endColumn":71},{"ruleId":"198","severity":1,"message":"199","line":186,"column":54,"nodeType":"200","messageId":"201","endLine":186,"endColumn":56},{"ruleId":"202","severity":1,"message":"210","line":9,"column":20,"nodeType":"204","messageId":"205","endLine":9,"endColumn":30},{"ruleId":"202","severity":1,"message":"211","line":28,"column":23,"nodeType":"204","messageId":"205","endLine":28,"endColumn":36},{"ruleId":"198","severity":1,"message":"199","line":29,"column":19,"nodeType":"200","messageId":"201","endLine":29,"endColumn":21},{"ruleId":"202","severity":1,"message":"212","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":16},{"ruleId":"202","severity":1,"message":"213","line":29,"column":23,"nodeType":"204","messageId":"205","endLine":29,"endColumn":36},{"ruleId":"198","severity":1,"message":"199","line":30,"column":19,"nodeType":"200","messageId":"201","endLine":30,"endColumn":21},{"ruleId":"202","severity":1,"message":"214","line":28,"column":25,"nodeType":"204","messageId":"205","endLine":28,"endColumn":40},{"ruleId":"198","severity":1,"message":"199","line":29,"column":21,"nodeType":"200","messageId":"201","endLine":29,"endColumn":23},{"ruleId":"202","severity":1,"message":"215","line":29,"column":22,"nodeType":"204","messageId":"205","endLine":29,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":30,"column":18,"nodeType":"200","messageId":"201","endLine":30,"endColumn":20},{"ruleId":"216","severity":1,"message":"217","line":16,"column":19,"nodeType":"218","endLine":16,"endColumn":85},{"ruleId":"216","severity":1,"message":"217","line":20,"column":19,"nodeType":"218","endLine":20,"endColumn":88},{"ruleId":"216","severity":1,"message":"217","line":28,"column":19,"nodeType":"218","endLine":28,"endColumn":67},{"ruleId":"202","severity":1,"message":"219","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":22,"column":27,"nodeType":"200","messageId":"201","endLine":22,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":27,"column":26,"nodeType":"200","messageId":"201","endLine":27,"endColumn":28},{"ruleId":"206","severity":1,"message":"220","line":32,"column":7,"nodeType":"208","endLine":32,"endColumn":9,"suggestions":"221"},{"ruleId":"198","severity":1,"message":"199","line":69,"column":40,"nodeType":"200","messageId":"201","endLine":69,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":74,"column":40,"nodeType":"200","messageId":"201","endLine":74,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":85,"column":39,"nodeType":"200","messageId":"201","endLine":85,"endColumn":41},{"ruleId":"198","severity":1,"message":"199","line":91,"column":39,"nodeType":"200","messageId":"201","endLine":91,"endColumn":41},{"ruleId":"202","severity":1,"message":"222","line":4,"column":19,"nodeType":"204","messageId":"205","endLine":4,"endColumn":30},{"ruleId":"206","severity":1,"message":"223","line":30,"column":7,"nodeType":"208","endLine":30,"endColumn":9,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"219","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":22,"column":27,"nodeType":"200","messageId":"201","endLine":22,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":27,"column":26,"nodeType":"200","messageId":"201","endLine":27,"endColumn":28},{"ruleId":"206","severity":1,"message":"220","line":32,"column":7,"nodeType":"208","endLine":32,"endColumn":9,"suggestions":"225"},{"ruleId":"198","severity":1,"message":"199","line":68,"column":40,"nodeType":"200","messageId":"201","endLine":68,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":73,"column":40,"nodeType":"200","messageId":"201","endLine":73,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":87,"column":25,"nodeType":"228","endLine":87,"endColumn":72},{"ruleId":"198","severity":1,"message":"199","line":87,"column":42,"nodeType":"200","messageId":"201","endLine":87,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":93,"column":42,"nodeType":"200","messageId":"201","endLine":93,"endColumn":44},{"ruleId":"202","severity":1,"message":"219","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":22,"column":27,"nodeType":"200","messageId":"201","endLine":22,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":27,"column":26,"nodeType":"200","messageId":"201","endLine":27,"endColumn":28},{"ruleId":"206","severity":1,"message":"220","line":32,"column":7,"nodeType":"208","endLine":32,"endColumn":9,"suggestions":"229"},{"ruleId":"198","severity":1,"message":"199","line":69,"column":43,"nodeType":"200","messageId":"201","endLine":69,"endColumn":45},{"ruleId":"198","severity":1,"message":"199","line":74,"column":43,"nodeType":"200","messageId":"201","endLine":74,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":89,"column":25,"nodeType":"228","endLine":89,"endColumn":72},{"ruleId":"198","severity":1,"message":"199","line":89,"column":42,"nodeType":"200","messageId":"201","endLine":89,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":95,"column":42,"nodeType":"200","messageId":"201","endLine":95,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":33,"column":19,"nodeType":"218","endLine":33,"endColumn":79},{"ruleId":"202","severity":1,"message":"219","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":22,"column":27,"nodeType":"200","messageId":"201","endLine":22,"endColumn":29},{"ruleId":"198","severity":1,"message":"199","line":27,"column":26,"nodeType":"200","messageId":"201","endLine":27,"endColumn":28},{"ruleId":"206","severity":1,"message":"220","line":32,"column":7,"nodeType":"208","endLine":32,"endColumn":9,"suggestions":"230"},{"ruleId":"198","severity":1,"message":"199","line":69,"column":43,"nodeType":"200","messageId":"201","endLine":69,"endColumn":45},{"ruleId":"198","severity":1,"message":"199","line":74,"column":43,"nodeType":"200","messageId":"201","endLine":74,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":89,"column":25,"nodeType":"228","endLine":89,"endColumn":72},{"ruleId":"198","severity":1,"message":"199","line":89,"column":42,"nodeType":"200","messageId":"201","endLine":89,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":95,"column":42,"nodeType":"200","messageId":"201","endLine":95,"endColumn":44},{"ruleId":"202","severity":1,"message":"231","line":13,"column":8,"nodeType":"204","messageId":"205","endLine":13,"endColumn":22},{"ruleId":"198","severity":1,"message":"199","line":6,"column":67,"nodeType":"200","messageId":"201","endLine":6,"endColumn":69},{"ruleId":"198","severity":1,"message":"199","line":6,"column":71,"nodeType":"200","messageId":"201","endLine":6,"endColumn":73},{"ruleId":"198","severity":1,"message":"199","line":11,"column":31,"nodeType":"200","messageId":"201","endLine":11,"endColumn":33},{"ruleId":"198","severity":1,"message":"199","line":19,"column":68,"nodeType":"200","messageId":"201","endLine":19,"endColumn":70},{"ruleId":"198","severity":1,"message":"199","line":33,"column":68,"nodeType":"200","messageId":"201","endLine":33,"endColumn":70},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'FaClock' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCast', 'fetchSingleItem', and 'fetchVideos'. Either include them or remove the dependency array.","ArrayExpression",["234"],"'setIsAbout' is assigned a value but never used.","'setisUpcoming' is assigned a value but never used.","'bg_url' is assigned a value but never used.","'setisTopRated' is assigned a value but never used.","'setIsNowPlaying' is assigned a value but never used.","'setIsPopular' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'noProfile' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["235"],"'poster_base' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchLatest'. Either include it or remove the dependency array.",["236"],["237"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["238"],["239"],"'ratingSelector' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"242","fix":"246"},{"desc":"242","fix":"247"},{"desc":"242","fix":"248"},"Update the dependencies array to be: [fetchCast, fetchSingleItem, fetchVideos]",{"range":"249","text":"250"},"Update the dependencies array to be: [id]",{"range":"251","text":"252"},"Update the dependencies array to be: [fetchLatest]",{"range":"253","text":"254"},{"range":"255","text":"252"},{"range":"256","text":"252"},{"range":"257","text":"252"},[2765,2767],"[fetchCast, fetchSingleItem, fetchVideos]",[1249,1251],"[id]",[1103,1105],"[fetchLatest]",[1231,1233],[1229,1231],[1229,1231]]